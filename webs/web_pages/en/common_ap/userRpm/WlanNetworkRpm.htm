
<SCRIPT language=javascript src="../localiztion/str_err.js" type=text/javascript></SCRIPT>
<SCRIPT language="JavaScript" src="../dynaform/custom.js" type="text/JavaScript"></SCRIPT>
<SCRIPT language=javascript src="../localiztion/char_set.js" type=text/javascript></SCRIPT>
<META http-equiv=Content-Type content="text/html; charset=iso-8859-1">
<SCRIPT type="text/javascript"><!-- 
function doHelp(){location.href="/help/WlanNetworkHelpRpm.htm";}
function getValLen(val)
{
	var len = 0;
	var i = 0;
	for (i = 0; i < val.length; i ++)
	{
		var c = val.charAt(i);
		len += ((c >= ' ') && (c <= '~')) ? 1 : 2;
	}
	return len;
}
// check len of ssid
function checkssid()
{
	var cf = document.forms[0];
	return getValLen(cf.ssid1.value);
}

function checkbrlssid()
{
	var cf = document.forms[0];
	return getValLen(cf.brlssid.value);
}

var transMatrixURL = new Array(
	/%/g, "%25",
	/#/g, "%23",
	/&/g, "%26",
	/;/g, "%3B",
	/\\/g, "%5C",
	/'/g, "%27",
	/"/g, "%22",
	/</g, "%3C",
	/>/g, "%3E",
	/ /g, "%20",
	/\+/g, "%2B",
	/\=/g, "%3D"
);
var secElemDisplayInfo=new Array(
	1,1,1,
	0,1,1,
	0,1,1,
	1,0,1,
	1,0,1,
	1,0,1,
	1,0,0,
	1,0,0,
	1,1,1
);
function transToURL(str)
{
	for (var i = 0; i < transMatrixURL.length; i+=2)
	{
		str = str.replace(transMatrixURL[i], transMatrixURL[i+1]);
	}
	return str;
}

function checkname(szname)
{
	var c;
	var ch = "0123456789ABCDEFabcdefGHIJKLMNOPQRSTUVWXYZghijklmnopqrstuvwxyz`~!@#$%^&*()-=_+[]{};:\'\"\\|/?.,<>/ ";

	for (var i = 0; i < szname.length; i++)
	{
		c = szname.charAt(i);
		if (ch.indexOf(c) == -1)
			return false;
	}
	return true;
}

//added by songwei
function doBrl()
{
	var cf = document.forms[0];
	if (cf.wdsbrl.checked)
	{
		document.getElementById("wdsshow").style.display = "block";

		if (cf.keytype.value == 1)
		{
			cf.wepindex.disabled = true;
			cf.authtype.disabled = true;
			cf.keytext.disabled = true;
		}
		if ((cf.keytype.value == 2) || (cf.keytype.value == 3))
		{
			cf.wepindex.disabled = false;
			cf.keytext.disabled = false;
			cf.authtype.disabled = false;
			cf.keytext.maxLength = (cf.keytype.value == 2)? 16:32;
		}
		else if(cf.keytype.value == 4)
			{	
				cf.keytext.disabled = false;
				cf.wepindex.disabled = true;
				cf.authtype.disabled = true;
				cf.keytext.maxLength = 64;
			}
	}
	else
	{
		document.getElementById("wdsshow").style.display = "none";
	}
	return true;
}

function doSelKeytype()
{
	var cf = document.forms[0];
	if ((cf.keytype.value == 2) || (cf.keytype.value == 3))
	{
		cf.wepindex.disabled = false;
		cf.authtype.disabled = false;
		cf.keytext.disabled = false;
		cf.keytext.maxLength = (cf.keytype.value == 2)? 16:32;
	}
	else if(cf.keytype.value == 4)
	{
		cf.keytext.disabled = false;
		cf.wepindex.disabled = true;
		cf.authtype.disabled = true;
		cf.keytext.maxLength = 64;
	     }
	else
    	    {
		cf.keytext.disabled = true;
        	cf.wepindex.disabled = true;
		cf.authtype.disabled = true;
    }
	return true;
}


function doCheckPskPasswd()
{
	var cf = document.forms[0];
	len = getValLen(cf.keytext.value);
	if  (len <= 0)
	{
		alert(js_psk_empty="Empty PSK password, please input one!");
		return false;
	}
	if ((len > 0) && (len < 8))
	{
		alert(js_psk_char="PSK password must be more than 8 characters, please input again!");
		return false;
	}
        if(len <= 64)
        {
            var ch="ABCDEFabcdef0123456789";
            var c;
            for(i = 0; i < len; i++)
            {
                c = cf.pskSecret.value.charAt(i);
                if(ch.indexOf(c) == -1)
                {
                    alert(js_psk_hex="The 64 bytes PSK password include non-hexadecimal characters, please input again.");
                    return false;
                }
            }
        }
	return true;
}
function Dialog(url, action, init){return Dialog._geckoOpenModal(url,action,init);}
Dialog._return = null;
Dialog._modal = null;
Dialog._arguments = null;
Dialog._parentEvent = function(ev)
{
if (Dialog._modal && !Dialog._modal.closed){Dialog._modal.focus();}
};
Dialog._geckoOpenModal = function(url,action,init){
var dlg = window.open(url,"ha_dialog","width=700,height=500,scrollbars=yes,resizable=yes,toolbar=no,menubar=no,personalbar=no");
Dialog._modal = dlg;
Dialog._arguments = init;
capwin(window.parent);
for (var i=0; i<window.parent.frames.length;capwin(window.parent.frames[i++]));
Dialog._return = function(val){
if (val && action)
action(val);
relwin(window.parent);
for (var i=0; i<window.parent.frames.length; relwin(window.parent.frames[i++]));
Dialog._modal = null;
}}
function capwin(w)
{
if (document.all){
w.attachEvent("onclick",Dialog._parentEvent);
w.attachEvent("onmousedown",Dialog._parentEvent);
w.attachEvent("onfocus",Dialog._parentEvent);
}
else{
w.addEventListener("click",Dialog._parentEvent,true);
w.addEventListener("mousedown",Dialog._parentEvent,true);
w.addEventListener("focus",Dialog._parentEvent,true);
}}
function relwin(w)
{
if (document.all){
w.detachEvent("onfocus",Dialog._parentEvent);
w.detachEvent("onmousedown",Dialog._parentEvent);
w.detachEvent("onclick",Dialog._parentEvent);
}
else{
w.delEventListener("focus",Dialog._parentEvent,true);
w.delEventListener("mousedown",Dialog._parentEvent,true);
w.delEventListener("click",Dialog._parentEvent,true);
}}
function generateURL()
{
var modeSelected = Number(document.forms[0].operMode.value);
var url = "/userRpm/popupSiteSurveyRpm.htm";
switch(modeSelected){
case 0:
case 1:
case 2:
return url;
case 3:
url += "?iMAC=staBssid&iSSID=staSsid";
return url;
case 4:
url += "?iMAC=rptBssid";
return url;
case 5:
url += "?iMAC=urptBssid";
return url;
case 6:
case 7:
if (document.forms[0].mptBssid1.value == "")
url += "?iMAC=mptBssid1";
else if (document.forms[0].mptBssid2.value == "")
url += "?iMAC=mptBssid2";
else if (document.forms[0].mptBssid3.value == "")
url += "?iMAC=mptBssid3";
else if (document.forms[0].mptBssid4.value == "")
url += "?iMAC=mptBssid4";
else
url += "?iMAC=mptBssid4";
return url;
default:
return url;
}}
function doSurvey()
{
	if(!document.forms[0].ap.checked)
	{
		alert(js_pl_enable_radio="Please enable wireless radio first.");
		return;
	}
	Dialog (generateURL(), "", "");
}
/*Technology of WR841NV5
function doSurvey()
{
	var ss = document.forms[0].ssid1.value;
	if(document.forms[0].wdsbrl.checked)
		location.href="popupSiteSurveyRpm.htm?select=" + document.forms[0].wdsbrl.checked
									+ "&wrr=" + document.forms[0].ap.checked
									+ "&sb=" + document.forms[0].broadcast.checked
									+ "&ssid=" + transToURL(ss.toString())
									+ "&curRegion=" + document.forms[0].region.value
									+ "&channel=" + document.forms[0].channel.value
									+ "&chanWidth=" + document.forms[0].chanWidth.value
									+ "&mode=" + document.forms[0].mode.value
									+ "&rate=" + document.forms[0].rate.value;
}
*/
function checkMptBssid()
{
		var cf = document.forms[0];
		if(getValLen(cf.mptBssid1.value)==0 && getValLen(cf.mptBssid2.value)==0 && getValLen(cf.mptBssid3.value)==0 && getValLen(cf.mptBssid4.value)==0)
		{
			alert(js_pl_input_bssid="Please input at least one Bridged BSSID!");
			cf.mptBssid1.focus();
			cf.mptBssid1.select();
			return false;
		}
		if(getValLen(cf.mptBssid1.value)>0 && !macverify(cf.mptBssid1.value))
		{
			cf.mptBssid1.focus();
			cf.mptBssid1.select();
			return false
		}
		if(getValLen(cf.mptBssid2.value)>0 && !macverify(cf.mptBssid2.value))
		{
			cf.mptBssid2.focus();
			cf.mptBssid2.select();
			return false
		}
		if(getValLen(cf.mptBssid3.value)>0 && !macverify(cf.mptBssid3.value))
		{
			cf.mptBssid3.focus();
			cf.mptBssid3.select();
			return false
		}
		if(getValLen(cf.mptBssid4.value)>0 && !macverify(cf.mptBssid4.value))
		{
			cf.mptBssid4.focus();
			cf.mptBssid4.select();
			return false
		}
		if (("" != cf.mptBssid1.value) && ((cf.mptBssid1.value.toLowerCase() == cf.mptBssid2.value.toLowerCase()) || (cf.mptBssid1.value.toLowerCase() == cf.mptBssid3.value.toLowerCase()) || (cf.mptBssid1.value.toLowerCase() == cf.mptBssid4.value.toLowerCase())))
		{
			alert(js_two_same_mac="Two or more Bridged AP have the same MAC.");
			cf.mptBssid1.focus();
			cf.mptBssid1.select();
			return false;
		}
		if (("" != cf.mptBssid2.value) && ((cf.mptBssid2.value.toLowerCase() == cf.mptBssid1.value.toLowerCase()) || (cf.mptBssid2.value.toLowerCase() == cf.mptBssid3.value.toLowerCase()) || (cf.mptBssid2.value.toLowerCase() == cf.mptBssid4.value.toLowerCase())))
		{
			alert(js_two_the_same_mac="Two or more Bridged AP have the same MAC.");
			cf.mptBssid2.focus();
			cf.mptBssid2.select();
			return false;
		}
		if (("" != cf.mptBssid3.value) && ((cf.mptBssid3.value.toLowerCase() == cf.mptBssid1.value.toLowerCase()) || (cf.mptBssid3.value.toLowerCase() == cf.mptBssid2.value.toLowerCase()) || (cf.mptBssid3.value.toLowerCase() == cf.mptBssid4.value.toLowerCase())))
		{
			alert(js_more_same_mac="Two or more Bridged AP have the same MAC.");
			cf.mptBssid3.focus();
			cf.mptBssid3.select();
			return false;
		}
		if (("" != cf.mptBssid4.value) && ((cf.mptBssid4.value.toLowerCase() == cf.mptBssid1.value.toLowerCase()) || (cf.mptBssid4.value.toLowerCase() == cf.mptBssid2.value.toLowerCase()) || (cf.mptBssid4.value.toLowerCase() == cf.mptBssid3.value.toLowerCase())))
		{
			alert(js_more_the_same_mac="Two or more Bridged AP have the same MAC.");
			cf.mptBssid4.focus();
			cf.mptBssid4.select();
			return false;
		}
		return true;
}
function doSubmit()
{
	var cf = document.forms[0];
	var ressid;
	var brlressid;
	if (wlanPara[6]==1 && ((cf.region.value == 54) || (cf.region.value == 69)))
	{	
	
			cf.chanWidth.disabled = false;
			cf.chanWidth.value = 1;
	}
	if(modeElemDisplayInfo[wlanPara[15]*8]==1)
	{
		ressid = checkssid();
		if(0 == ressid)
		{
			alert(document.getElementById("t_ssid_input_any").innerHTML + (wlanPara[15]==1?"1":"") + "!");
	    doSelKeytype();
			return false;
		}
		if(ressid > 32)
		{
			alert(js_ssid_exe="The SSID cannot exceed 32 characters. Please input correctly!");
			doSelKeytype();
	    return false;
		}
		if (!checkname(document.forms[0].ssid1.value))
		{
			alert(js_ssid_ill="The SSID contains illegal characters, please input another one!");
    	doSelKeytype();		
    	return false;
		}
	}
		if(modeElemDisplayInfo[wlanPara[15]*8+1]==1)//ssid2~ssid4
	{
		if(getValLen(cf.ssid2.value) > 32 || getValLen(cf.ssid3.value) > 32 || getValLen(cf.ssid4.value) > 32)
		{
			alert(js_ssid_exe="The SSID cannot exceed 32 characters. Please input correctly!");
			return false;
		}
		if (cf.vlanEnable.checked)
		{
			if(is_digit(cf.vlanId1.value) == false)
			{
						cf.vlanId1.focus();
						cf.vlanId1.select();
						return false;
			}
					
			if ((cf.vlanId1.value < 1 || cf.vlanId1.value > 4095) && (cf.vlanId1.value != "" || cf.ssid1.value != ""))
			{
					alert(js_vlanId="The value of VLAN ID must be between 1 and 4095, please input a correct one !");
					cf.vlanId1.focus();
					cf.vlanId1.select();
					return false;
			}
			
			if(is_digit(cf.vlanId2.value) == false)
			{
						cf.vlanId2.focus();
						cf.vlanId2.select();
						return false;
			}
					
			if ((cf.vlanId2.value < 1 || cf.vlanId2.value > 4095) && (cf.vlanId2.value != "" || cf.ssid2.value != ""))
			{
					alert(js_vlanId="The value of VLAN ID must be between 1 and 4095, please input a correct one !");
					cf.vlanId2.focus();
					cf.vlanId2.select();
					return false;
			}
			
			if(is_digit(cf.vlanId3.value) == false)
			{
						cf.vlanId3.focus();
						cf.vlanId3.select();
						return false;
			}
					
			if ((cf.vlanId3.value < 1 || cf.vlanId3.value > 4095) && (cf.vlanId3.value != "" || cf.ssid3.value != ""))
			{
					alert(js_vlanId="The value of VLAN ID must be between 1 and 4095, please input a correct one !");
					cf.vlanId3.focus();
					cf.vlanId3.select();
					return false;
			}
			
			if(is_digit(cf.vlanId4.value) == false)
			{
						cf.vlanId4.focus();
						cf.vlanId4.select();
						return false;
			}
					
			if ((cf.vlanId4.value < 1 || cf.vlanId4.value > 4095) && (cf.vlanId4.value != "" || cf.ssid4.value != ""))
			{
					alert(js_vlanId="The value of VLAN ID must be between 1 and 4095, please input a correct one !");
					cf.vlanId4.focus();
					cf.vlanId4.select();
					return false;
			}
		}
	}
	if(modeElemDisplayInfo[wlanPara[15]*8+2]==1)//client
	{
		if(getValLen(cf.staSsid.value)==0 && cf.staType[0].checked)
		{
			alert(js_pl_ssid="Please input SSID!");
			return false;
		}
		if(getValLen(cf.staSsid.value)>32)
		{
			alert(js_ssid_exe="The SSID cannot exceed 32 characters. Please input correctly!");
			return false;
		}
		if((cf.staType[1].checked || getValLen(cf.staBssid.value)>0) && !is_macaddr(cf.staBssid.value))
		{
			cf.staBssid.focus();
			cf.staBssid.select();
			return false;
		}
	}
	if(modeElemDisplayInfo[wlanPara[15]*8+3]==1)//Repeater
	{
		if(!is_macaddr(cf.rptBssid.value))
		{
			cf.rptBssid.focus();
			cf.rptBssid.select();
			return false;
		}
	}
	if(modeElemDisplayInfo[wlanPara[15]*8+4]==1)//universal Repeater
	{
		if(!is_macaddr(cf.urptBssid.value))
		{
			cf.urptBssid.focus();
			cf.urptBssid.select();
			return false;
		}
	}
	if((wlanPara[15]==6 || wlanPara[15]==7) && cf.channel.value == 15)
	{
		alert(js_cannot_to_auto="AP channel can't be set to auto in this operation mode!");
		return false;
	}
	if(modeElemDisplayInfo[wlanPara[15]*8+5]==1 && !checkMptBssid())//Bridge
	{
		return false;
	}
	if (cf.wdsbrl.checked)
	{
		brlressid = checkbrlssid();
		if(brlressid > 32)
		{
			alert(js_ssid_exe="The SSID cannot exceed 32 characters. Please input correctly!");
			doSelKeytype();
      return false;
		}
		if(0 == brlressid)
		{
			alert(js_pl_ssid="Please input Bridged SSID!");
      doSelKeytype();			
      return false;
		}
		var bssid = cf.brlbssid.value;
		if (macverify(bssid) == false)
		{
			alert(js_bridge_corret="You must make sure the bridged BSSID is correct.");
			doSelKeytype();
      return false;
		}
		if ((cf.keytype.value == 2)&&((getValLen(cf.keytext.value)!=5) && (getValLen(cf.keytext.value)!=13) && (getValLen(cf.keytext.value)!=16)))
		{
			alert(js_key_corret="The ASCII key'length must be 5,13 or 16!");
      doSelKeytype();			
      return false;
		}
		else if ((cf.keytype.value == 3)&&((getValLen(cf.keytext.value)!=10) && (getValLen(cf.keytext.value)!=26) && (getValLen(cf.keytext.value)!=32)))
		{
			alert(js_key_corret="The WEP key'length must be 10,26 or 32!");
			doSelKeytype();
      return false;
		}
		
	}
	if (!checkname(cf.brlssid.value))
	{
		alert(js_ssid_ill="The SSID contains illegal characters, please input another one!");
    doSelKeytype();		
    return false;
	}
	
	/* moved to changeRegion() 2009-07-16 for new requirement
	if (wlanPara[6] == 1)
	{
		alert(js_sel_country="Selecting the incorrect country may cause interference to other devices and violate the applicable law.");
	}
	*/
	
	for (var i =0; i<document.forms[0].elements.length; i++)
	{
		cf.elements[i].disabled = false;
	}
	//add by weizq,2008-10-16
	if(cf.mode.selectedIndex == 2)
	{
			//wep
			if(secInfo[0] == 1)
			{
				var bContinue = window.confirm(js_current_enc="Current encryption is WEP,which 11n only mode can not support.If you select ok,the security setting will be lost,continue?");
				if(!bContinue)
				{
					doSelKeytype();
					return false;
				}
			}
			//cipher = tkip or auto
			if(secInfo[3] == 1)
			{
				var bContinue = window.confirm(js_cur_tkip="Current encryption is Automatic or TKIP,which 11n only mode can not support.If you select ok,the encryption will be changed to AES,continue?");
				if(!bContinue)
				{
					doSelKeytype();
					return false;
				}
			}
	}
	//end add
	if((secInfo[0]==1 && secElemDisplayInfo[wlanPara[15]*3]==0)
	|| (secInfo[1]==1 && secElemDisplayInfo[wlanPara[15]*3+1]==0)
	|| (secInfo[2]==1 && secElemDisplayInfo[wlanPara[15]*3+2]==0)
	|| (wlanPara[15] == 1 && cf.vlanEnable.checked && secInfo[1] == 1))
	{
		var bContinue = window.confirm(js_confirm_encrypt_operation="This operation mode can not support some current encryption.Part or all of the encryption setting will be lost,continue?");
		if(!bContinue)
		{
			return false;
		}
	}
	
	if (cf.wdsbrl.checked == false)
	{
		cf.brlssid.value = "";
		cf.brlbssid.value = "";
		cf.keytype.value = 1;
		cf.keytext.value = "";
	}
	if ((cf.wdsbrl.checked == true) &&(wlanPara[31] != 0) && (cf.channel.value != wlanPara[31]))
	{
		alert(document.getElementById("t_bridge_not_same_1").innerHTML+wlanPara[31]+document.getElementById("t_bridge_not_same_2").innerHTML);
		doSelKeytype();
        return false;
	}
	//add by songwei,2009/02/13,check if ap's security is wep and index is 2
	if ((cf.wdsbrl.checked==true) && (wlanPara[28]==1) && (wlanPara[29] == 1) 
	    && (wlanPara[33] > 1) && (cf.keytype.value == 4))
	{
		alert(js_security_not_set="Your AP's security is WEP and index is not 1, so you can't choose WPA-PSK/WPA2-PSK as your bridge's security.")
		doSelKeytype();		
		return false;
	}
	//end add
	
	if (cf.keytype.value == 4)
	{
		if (doCheckPskPasswd() == false)
		{
			doSelKeytype();
			return false;
	         }
	}
	
	return true;
}
//add by weizhengqin,2008-10-21
function changeRate()
{
	var cf = document.forms[0];
	var i = 0;
	var j = 0;
	var rateCount = wlanPara[34];
	var rateMask = 0x0;
	
	if(wlanPara[15] == 3)
	{
		document.getElementById("line_rate").style.display = "none";
	}
	if(cf.mode.value == 1)
	{
		rateMask = 0x1;//11b only
	}
	else if(cf.mode.value == 2)
	{
		rateMask = 0x2;//11g only
	}
	else if(cf.mode.value == 3)
	{
		if(cf.chanWidth.value == 1)
		{	
			rateMask = 0x4;//11n only 20MHz
		}
		else if(cf.chanWidth.value == 2)
		{
			rateMask = 0x10;//11n only Auto
		}
		else if(cf.chanWidth.value == 3)
		{
			rateMask = 0x8;//11n only 40MHz
		}
	}
	else if(cf.mode.value == 4)
	{	
		rateMask = 0x20;//11bg mixed
	}
	else
	{
		if(cf.chanWidth.value == 1)
		{	
			rateMask = 0x40;//11bgn mixed 20MHz
		}
		else if(cf.chanWidth.value == 2)
		{
			rateMask = 0x100;//11bgn mixed Auto
		}
		else if(cf.chanWidth.value == 3)
		{
			rateMask = 0x80;//11bgn mixed 40MHz
		}
	}
	//remove all old options
	while((i = cf.rate.options.length) > 0)
	{
		cf.rate.remove(0);
	}
	
	//add new options
	for(i = 0,j = 0;i < rateCount;i++)
	{
		if(rateTable[2*i+1] & rateMask)
		{
			cf.rate.options[j++] = new Option(rateTable[2*i],2*i+1,false,false);
			cf.rate.value = 2*i+1;
		}
	}
	
}
//end add
var strMode = new Array(
	"11b only",
	"11g only",
	"11n only",
	"11bg mixed",
	"11bgn mixed"
);
function changeMode()
{
	var cf = document.forms[0];
	var maxMode = 1;
	var optionObj;
	var regionNum;
	var oldMode = cf.mode.value;
	var channelIndex;
	var modeCount = 5;
	var ix = 0;
	if (wlanPara[6] == 1)
		channelIndex = document.forms[0].region.value;
	else
		channelIndex = 17;
	channelIndex = (channelIndex)*4;
	cf.mode.options.length = 0;
	for(i = 0;i < modeCount;i++)
	{
		cf.mode.options[i] = new Option(strMode[i],i+1,false,false);
	}
	maxMode = modeCount;

	if (oldMode > maxMode)
		oldMode =1;
	cf.mode.value = oldMode;

	if((cf.mode.selectedIndex == 0) || (cf.mode.selectedIndex == 1) || (cf.mode.selectedIndex == 3))
	{
		cf.chanWidth.value = 1;
		cf.chanWidth.disabled = true;
	}
	else
	{
		cf.chanWidth.value = wlanPara[11];
		cf.chanWidth.disabled = false;
	}
	changeRate();
}
function alertRegion()
{
	if (wlanPara[6] == 1)
	{
		alert(js_sel_country="Selecting the incorrect country may cause interference to other devices and violate the applicable law.");
	}
}
function changeRegion()
{
	changeMode();
	if(modeElemDisplayInfo[wlanPara[15]*8+6] == 0)
	return;
	var cf = document.forms[0];
	var oldChannel = cf.channel.value;

	cf.channel.options.length = 0;
	var channelIndex;
	if (wlanPara[6] == 1)
		channelIndex = document.forms[0].region.value;
	else
		channelIndex = 17;
	channelIndex = (channelIndex)*4;
	var j=0;
	var autooptObj = new Option("Auto",15,false,false);
		cf.channel.options[j++] = autooptObj;
	var oldRegion = regionInfo[channelIndex];
	while(oldRegion == regionInfo[channelIndex])
	{	
		for (var i=regionInfo[channelIndex+1]; i<=regionInfo[channelIndex+2]; i++)
		{
			if ((i == 14) && (document.forms[0].mode.value == 2))
				continue;
			var optionObj = new Option(i,i,false,false);
			cf.channel.options[j++]=optionObj;
			if (i == oldChannel)
				cf.channel.value =i;
		}
		channelIndex =channelIndex+4;
	}
}

//add by songwei,NorthKorea and Morocoo don't support 40MHz
function checkRegion()
{
	var cf = document.forms[0];
	if(wlanPara[6] == 1)
	{
		if ((cf.region.value == 54) || (cf.region.value == 69))
		{	
				cf.chanWidth.value = 1;
				cf.chanWidth.disabled = true;
				changeRate();
		}
		else
		{
			cf.chanWidth.value = wlanPara[11];
			//cf.chanWidth.disabled = false;
			changeRate();
		}
	}
}
//end add
var regionInfo = new Array(
	"Albania", 1, 13, 2,
	"Algeria", 1, 13, 2,
	"Argentina", 1, 13, 2,
	"Armenia", 1, 13, 2,
	"Australia", 1, 13, 2,
	"Austria", 1, 13, 2,
	"Azerbaijan", 1, 13, 2,
	"Bahrain", 1, 13, 2,
	"Belarus", 1, 13, 2,
	"Belgium", 1, 13, 2,
	"Belize", 1, 13, 2,
	"Bolivia", 1, 13, 2,
	"Brazil", 1, 13, 2,
	"Brunei Darussalam", 1, 13, 2,
	"Bulgaria", 1, 13, 2,
	"Canada", 1, 11, 2,
	"Chile", 1, 13, 2,
	"China", 1, 13, 1,
	"Colombia", 1, 11, 2,
	"Costa Rica", 1, 13, 2,
	"Croatia", 1, 13, 2,
	"Cyprus", 1, 13, 2,
	"Czech Republic", 1, 13, 2,
	"Denmark", 1, 13, 2,
	"Dominican Republic", 1, 11, 2,
	"Ecuador", 1, 13, 2,
	"Egypt", 1, 13, 2,
	"El Salvador", 1, 13, 2,
	"Estonia", 1, 13, 2,
	"Finland", 1, 13, 2,
	"France", 1, 13, 2,
	"Georgia", 1, 13, 2,
	"Germany", 1, 13, 2,
	"Greece", 1, 13, 2,
	"Guatemala", 1, 11, 2,
	"Honduras", 1, 13, 2,
	"Hong Kong", 1, 13, 2,
	"Hungary", 1, 13, 2,
	"Iceland", 1, 13, 2,
	"India", 1, 13, 2,
	"Indonesia", 1, 13, 2,
	"Iran", 1, 13, 2,
	"Ireland", 1, 13, 2,
	"Israel", 1, 13, 2,
	"Italy", 1, 13, 2,
	"Japan", 1, 14, 2,
	"Japan1", 1, 14, 2,
	"Japan2", 1, 11, 2,
	"Japan3", 1, 14, 2,
	"Japan4", 1, 14, 2,
	"Japan5", 1, 14, 2,
	"Japan6", 1, 13, 2,
	"Jordan", 1, 13, 2,
	"Kazakhstan", 1, 13, 2,
	"North Korea", 1, 13, 2,
	"Korea Republic", 1, 13, 2,
    //"Korea Republic2", -19, -7, 2,
	"Korea Republic3", 1, 13, 2,
	"Kuwait", 1, 13, 2,
	"Latvia", 1, 13, 2,
	"Lebanon", 1, 13, 2,
	"Liechtenstein", 1, 13, 2,
	"Lithuania", 1, 13, 2,
	"Luxembourg", 1, 13, 2,
	"Macau", 1, 13, 2,
	"Macedonia", 1, 13, 2,
	"Malaysia", 1, 13, 2,
	"Malta", 1, 13, 2,
	"Mexico", 1, 11, 2,
	"Monaco", 1, 13, 2,
	"Morocco", 1, 13, 2,
	"Netherlands", 1, 13, 2,
	"New Zealand", 1, 13, 2,
	"Norway", 1, 13, 2,
	"Oman", 1, 13, 2,
	"Pakistan", 1, 13, 2,
	"Panama", 1, 11, 2,
	"Peru", 1, 13, 2,
	"Philippines", 1, 13, 2,
	"Poland", 1, 13, 2,
	"Portugal", 1, 13, 2,
	"Puerto Rico", 1, 11, 2,
	"Qatar", 1, 13, 2,
	"Romania", 1, 13, 2,
	"Russia", 1, 13, 2,
	"Saudi Arabia", 1, 13, 2,
	"Singapore", 1, 13, 2,
	"Slovak Republic", 1, 13, 2,
	"Slovenia", 1, 13, 2,
	"South Africa", 1, 13, 2,
	"Spain", 1, 13, 2,
	"Sweden", 1, 13, 2,
	"Switzerland", 1, 13, 2,
	"Syria", 1, 13, 2,
	"Taiwan", 1, 11, 2,
	"Thailand", 1, 13, 2,
	"Trinidad & Tobago", 1, 13, 2,
	"Tunisia", 1, 13, 2,
	"Turkey", 1, 13, 2,
	"Ukraine", 1, 13, 2,
	"United Arab Emirates", 1, 13, 2,
	"United Kingdom", 1, 13, 2,
	"United States", 1, 11, 2,
	"Uruguay", 1, 13, 2,
	"Uzbekistan", 1, 11, 2,
	"Venezuela", 1, 13, 2,
	"Viet Nam", 1, 13, 2,
	"Yemen", 1, 13, 2,
	"Zimbabwe", 1, 13, 2
); 
var modeElemDisplayInfo=new Array(
	1,0,0,0,0,0,1,1,
	1,1,0,0,0,0,1,1,
	1,1,0,0,0,0,1,1,
	0,0,1,0,0,0,0,0,
	0,0,0,1,0,0,0,0,
	0,0,0,0,1,0,0,0,
	0,0,0,0,0,1,1,0,
	1,0,0,0,0,1,1,1,
	1,1,1,1,1,1,1,1
);
function onVlanEnable()
{
	if(wlanPara[15] != 1)
		return;
	if(document.forms[0].vlanEnable.checked)
	{
		document.forms[0].vlanId1.disabled = false;
		document.forms[0].vlanId2.disabled = false;
		document.forms[0].vlanId3.disabled = false;
		document.forms[0].vlanId4.disabled = false;
	}
	else
	{
		document.forms[0].vlanId1.disabled = true;
		document.forms[0].vlanId2.disabled = true;
		document.forms[0].vlanId3.disabled = true;
		document.forms[0].vlanId4.disabled = true;
	}
}

function changeInfo()
{
	if ((wlanPara[15] == 3) && (document.forms[0].staType[1].checked == true))
	{ 
		    document.getElementById("t_lnote").style.display = "block";
	}
	else
	{
        document.getElementById("t_lnote").style.display = "none";
	}			
}

var modeElem=new Array(
  (wlanPara[15]==1?'<TR id="chkVLAN"><td class=item style="padding-left:60px"><input name="vlanEnable" id="vlanEnable" type="checkbox" value="2" onClick="onVlanEnable();"><span id="t_enVLAN">Enable VLAN </span></TD><td>&nbsp;</td></TR>':'')+
	'<TR id="element_1"><TD class=item style="padding-left:60px">SSID'+ (wlanPara[15]==1?1:'') +':</TD><TD><INPUT class="text" name="ssid1" maxLength=32 size=32>'+ (wlanPara[15]==1?'<span style="FONT-WEIGHT: bold;">&nbsp;&nbsp;&nbsp;&nbsp;VLAN&nbsp;ID:&nbsp;&nbsp;</span><INPUT class="text" name="vlanId1" maxLength=4 size=4>':'')+'</TD></TR>',
	
	
	'<TR><TD class=item style="padding-left:60px">SSID2: </TD><TD><INPUT class="text" name="ssid2" maxLength=32 size=32><span style="FONT-WEIGHT: bold;">&nbsp;&nbsp;&nbsp;&nbsp;VLAN&nbsp;ID:&nbsp;&nbsp;</span><INPUT class="text" name="vlanId2" maxLength=4 size=4></TD></TR>'+
	'<TR><TD class=item style="padding-left:60px">SSID3: </TD><TD><INPUT class="text" name="ssid3" maxLength=32 size=32><span style="FONT-WEIGHT: bold;">&nbsp;&nbsp;&nbsp;&nbsp;VLAN&nbsp;ID:&nbsp;&nbsp;</span><INPUT class="text" name="vlanId3" maxLength=4 size=4></TD></TR>'+
	'<TR><TD class=item style="padding-left:60px">SSID4: </TD><TD><INPUT class="text" name="ssid4" maxLength=32 size=32><span style="FONT-WEIGHT: bold;">&nbsp;&nbsp;&nbsp;&nbsp;VLAN&nbsp;ID:&nbsp;&nbsp;</span><INPUT class="text" name="vlanId4" maxLength=4 size=4></TD></TR>',
	
	'<TR id="chkWds"><td class=item style="padding-left:60px"><input name="staWds" id="staWds" type="checkbox" value="2"><span id="t_enWDS">Enable WDS</span></TD><td>&nbsp;</td></TR>'+
	'<TR><td class=item style="padding-left:60px"><input name="staType" id="staType" type="radio" value="0" onclick="changeInfo();">SSID:</td><TD><input name="staSsid" type="text" class="text" id="staSsid" value="" size="32" maxlength="32"></TD></TR>'+
	'<TR><td class=item style="padding-left:40px"><input name="staType" id="staType" type="radio" value="1" onclick="changeInfo();"><span id="t_macOfAP">MAC of AP:</span></td><TD><input name="staBssid" type="text" class="text" id="staBssid" value="" size="17" maxlength="17"></TD></TR>',
	
	'<TR><td class=item style="padding-left:60px"><span id="t_macOfAP1">MAC of AP:</span></td><TD><input id="rptBssid" name="rptBssid" type="text" class="text" value="" size="17" maxlength="17"></TD></TR>',
	
	'<TR><td class=item style="padding-left:60px"><span id="t_macOfAP2">MAC of AP:</span></td><TD><input id="urptBssid" name="urptBssid" type="text" class="text" value="" size="17" maxlength="17"></TD></TR>',
	
	'<TR><td class=item style="padding-left:60px"><span id="t_briMacOfAp1">MAC of AP1:</span></td><TD><input id="mptBssid1" name="mptBssid1" type="text" class="text" value="" size="17" maxlength="17"></TD></TR>'+
	'<TR><td class=item style="padding-left:60px"><span id="t_briMacOfAp2">MAC of AP2:</span></td><TD><input id="mptBssid2" name="mptBssid2" type="text" class="text" value="" size="17" maxlength="17"></TD></TR>'+
	'<TR><td class=item style="padding-left:60px"><span id="t_briMacOfAp3">MAC of AP3:</span></td><TD><input id="mptBssid3" name="mptBssid3" type="text" class="text" value="" size="17" maxlength="17"></TD></TR>'+
	'<TR><td class=item style="padding-left:60px"><span id="t_briMacOfAp4">MAC of AP4:</span></td><TD><input id="mptBssid4" name="mptBssid4" type="text" class="text" value="" size="17" maxlength="17"></TD></TR>',
	
	'<TR><TD class=item style="padding-left:60px" id="t_ochannelname">Channel:</TD><TD><SELECT style = "width:110px" name="channel"></SELECT></TD></TR>',
	
	'<TR><TD>&nbsp;</TD>'+
	'<TD align = "left"><input type="checkbox" value=2 name="broadcast">Enable SSID Broadcast</TD></TR>'
);
function onChangeOperMode()
{
	location.href="/userRpm/WlanNetworkRpm.htm?operMode="+document.forms[0].operMode.value;
}
//--></SCRIPT>
</HEAD>
<BODY  onload="setTagStr(document,'ntw_wlan_network'); doBrl(); LoadHelp('WlanNetworkHelpRpm.htm'); resize(this);" >
<CENTER>
  <FORM onSubmit="return doSubmit();" action="WlanNetworkRpm.htm" method="get" enctype="multipart/form-data">
    <TABLE id="autoWidth" border = 0>
      <TBODY>
        <TR>
          <TD class="h1" colspan=2 id="t_title">Wireless Settings</TD>
        </TR>
        <TR>
          <TD class="blue" colspan=2></TD>
        </TR>
        	
				<TR>
					<TD class=item style="padding-left:60px" id="t_ope_mode">Operation Mode:</TD>
					<TD>
						<select name="operMode" id="operMode" onChange="onChangeOperMode();">
							<SCRIPT language="JavaScript">
								for(var i=0; i<operModeNum; i++)
								{
									if(operModeEnable(i))
									{
										document.write('<option value=' + getOperModeValue(i) + '>' + getOperModeName(i) +'</option>');
									}
								}
							</SCRIPT>
						</select>
					</TD>
				</TR>
				<TR>
          <TD class="blue" colspan=2></TD>
        </TR>
<SCRIPT language="JavaScript">
					var modeInfoIdx=0;
					for(modeInfoIdx=0;modeInfoIdx<5;modeInfoIdx++)
					{
						if(modeElemDisplayInfo[modeInfoIdx+wlanPara[15]*8]==1)
							document.write(modeElem[modeInfoIdx]);
					}
					if (wlanPara[15] == 3)
					{
						document.write('<TR><TD class="Item"   id="t_lwarn" class=item style="padding-left:60px" disabled>&nbsp;<\/TD><BR>&nbsp;<\/BR><TD id ="t_lnote" style="display:none;color:red;">Ensure the AP has enabled \"SSID Broadcast\" if you want to connect to it by MAC.<BR>Otherwise the connection may be failed.<\/BR><\/TD><\/TR>');
					}
</script>
        <SCRIPT type="text/javascript">
if (wlanPara[6] == 1)
{
	var regionIndex=0;
	var oldRegion;
	document.write('<TR><TD class=Item id="t_region" class=item style="padding-left:60px">Region:<\/TD><TD><select name=region width = 180px onChange="alertRegion();changeRegion();checkRegion();">');
	for (var i = 0; i < wlanPara[4]; i++)
	{
		regionIndex = regionIndex+4;
		if (oldRegion == regionInfo[regionIndex-4])
		{
			continue;		
		}
		document.write('<option value='+i+'>'+regionInfo[regionIndex-4]+'<\/option>');
		oldRegion = regionInfo[regionIndex-4];
	}
	document.forms[0].region.value = wlanPara[5];
	document.write('<\/select><\/TD><\/TR><TR><TD class="Item"   id="t_lwarn" class=item style="padding-left:60px" disabled>Warning:<br>&nbsp;<\/br><\/TD><TD  id="t_warnNote" disabled>Ensure you select a correct country to conform local law.<br>Incorrect settings may cause interference. <\/TD><\/TR><TR><TD>&nbsp;<\/TD><TD>&nbsp;<\/TD><\/TR>');
}
</SCRIPT>
        <SCRIPT language="JavaScript">
					if(modeElemDisplayInfo[6+wlanPara[15]*8]==1)
						document.write(modeElem[6]);
				</SCRIPT>
        <TR id="line_wlMode">
          <TD class="Item" id="t_mode" class=item style="padding-left:60px">Mode:</TD>
          <TD><SELECT name="mode" style = "width:110px" onChange="changeRegion();">
            </SELECT></TD>
        </TR>
        <TR>
          <TD class="Item" id="t_chn_width" class=item style="padding-left:60px"> Channel Width: </TD>
          <TD><SELECT name="chanWidth" style = "width:110px" onChange="changeRate()">
              <OPTION value=2 id="t_auto">20/40MHz</OPTION>
              <OPTION value=1>20MHz</OPTION>
            </SELECT></TD>
        </TR>
        <TR id="line_rate">
          <TD class="Item" id="t_rate" class=item style="padding-left:60px">Max Tx Rate:</TD>
          <TD><SELECT name="rate" style = "width:110px">
            </SELECT></TD>
        </TR>
        <TR>
          <TD>&nbsp;</TD>
          <TD><INPUT type="checkbox" value=1 name="ap"><A id="t_enwi">Enable Wireless Radio</A></TD>
        </TR>
        <SCRIPT language="JavaScript">
					if(modeElemDisplayInfo[7+wlanPara[15]*8]==1)
						document.write(modeElem[7]);
					if(modeElemDisplayInfo[5+wlanPara[15]*8]==1)
						document.write(modeElem[5]);
				</SCRIPT>
				<TR id="line_survey">
          <TD>&nbsp;</TD>
          <TD align="left"><INPUT name="survey" id="survey" type="button" class="button" value="Survey" onClick="doSurvey();"></TD>
        </TR>
        <TR style="display:none">
          <TD></TD>
          <TD style="display:none"><INPUT type="checkbox" value=2 name="wdsbrl" id="wdsbrl" onClick="doBrl()">
            &nbsp;<A id="t_enWdsbrl">Enable WDS/Bridge</A></TD>
        </TR>
      <TABLE id="wdsshow" style="display:none">
        <TR>
          <TD class="Item" id="t_brlssid">SSID(to be bridged):</TD>
          <TD><INPUT class="text" id="brlssid" name="brlssid" maxlength=32 size=32></TD>
        </TR>
        <TR>
          <TD class="Item" id="t_brlssid">BSSID(to be bridged):</TD>
          <TD><INPUT class="text" id="brlbssid" name="brlbssid" maxlength=17 size=17>
            Example:00-1D-0F-11-22-33</TD>
        </TR>
        <TR>
          <TD></TD>
          <TD align="left"><INPUT name="survey" id="survey" type="button" class="button" value="Survey" onClick="doSurvey();"></TD>
        </TR>
        <TR>
          <TD class="Item" id="t_keytype">Key type:</TD>
          <TD><SELECT name="keytype" style = "width:180px" onChange="doSelKeytype()">
              <OPTION value=1 id="t_none">None</OPTION>
              <OPTION value=2 id="t_wep_asc">WEP(ASCII)</OPTION>
              <OPTION value=3 id="t_wep_hex">WEP(HEX)</OPTION>
              <OPTION value=4  id="t_wpa">WPA-PSK/WPA2-PSK</OPTION>
            </SELECT></TD>
        </TR>
        <TR>
          <TD class="Item" id="t_wepindex">WEP Index:</TD>
          <TD><SELECT name="wepindex" style = "width:180px">
              <OPTION value=1>1</OPTION>
              <OPTION value=2>2</OPTION>
              <OPTION value=3>3</OPTION>
              <OPTION value=4>4</OPTION>
            </SELECT></TD>
        </TR>
        <TR>
          <TD class="Item" id="t_authtype">Auth type:</TD>
          <TD><SELECT name="authtype" id="authtype" style = "width:180px">
              <OPTION value=1 id="t_open">open</OPTION>
              <OPTION value=2 id="t_shared">shared</OPTION>
            </SELECT></TD>
        </TR>
        <TR>
          <TD class=Item style="padding-left:40px" id="t_keytext">Password:</TD>
          <TD colspan = "3"><INPUT name="keytext" type=text class=text id="keytext"></TD>
        </TR>
      </TABLE>
      <TABLE>
<SCRIPT type="text/javascript">
if(wlanPara[13] == 1)
{
//added by ZQQ,08.12.05, add the reboot information
    document.write('<TR><TD><\/TD><TD><span style="color:#FF0000" id="t_chng">The change of wireless config will not take effect until the AP reboots, please <\/span><A href="../userRpm/SysRebootRpm.htm" id="t_click">click here<\/A><span id="t_to_reboot" style="color:#FF0000"> to reboot.<\/span> <\/TD><\/TR>');  
	
}
</SCRIPT>
        <TR>
          <TD class="blue" colspan=2></TD>
        </TR>
      </TABLE>
      <TR>
        <TD></TD>
        <TD><INPUT class="buttonBig" id="Save" type="submit" value="Save" name="Save"></TD>
      </TR>
      </TBODY>
      
    </TABLE>
  </FORM>
</CENTER>
<P style="display:none" id="t_bridge_not_same_1">The Bridged AP's channel is </P>
<p style="display:none" id="t_bridge_not_same_2">, not the same as your AP's.Please reset your channel or disable the bridge function.</P>
<P style="display:none" id="t_ssid_input_any" name="t_ssid_input_any">Please input SSID</P>
</BODY>
</HTML>
<SCRIPT type="text/javascript">
	changeRegion();
	document.forms[0].operMode.value = wlanPara[15];
	if(wlanPara[15] >= 3 && wlanPara[15] <= 6)
	{
		document.getElementById("line_wlMode").style.display = "none";
		document.forms[0].mode.value = 5;
	}
	if(wlanPara[15]>=0 && wlanPara[15]<=2)
		document.getElementById("line_survey").style.display = "none";
	if (wlanPara[15] == 3)
	{
		if (wlanPara[35] == 1)
		{
			document.getElementById("t_lnote").style.display = "block";
		}
		else
		{
			document.getElementById("t_lnote").style.display = "none";
		}
	}
	if(modeElemDisplayInfo[wlanPara[15]*8] == 1)
    document.forms[0].ssid1.value = wlanPara[3];
  if(modeElemDisplayInfo[wlanPara[15]*8+1] == 1)
  {
  	document.forms[0].vlanEnable.checked = vlanPara[0];
  	document.forms[0].ssid2.value = wlanPara[16];
  	document.forms[0].ssid3.value = wlanPara[17];
  	document.forms[0].ssid4.value = wlanPara[18];
  	document.forms[0].vlanId1.value = vlanPara[1];
  	if (wlanPara[16] != "")
  	document.forms[0].vlanId2.value = vlanPara[2];
  	if (wlanPara[17] != "")
  	document.forms[0].vlanId3.value = vlanPara[3];
  	if (wlanPara[18] != "")
  	document.forms[0].vlanId4.value = vlanPara[4];
	}
	if(modeElemDisplayInfo[wlanPara[15]*8+2] == 1)
  {
  	document.forms[0].staType[wlanPara[35]].checked = true;
  	document.forms[0].staWds.checked = wlanPara[36];
  	document.forms[0].staSsid.value = wlanPara[37];
  	document.forms[0].staBssid.value = wlanPara[38];
  }
  if(modeElemDisplayInfo[wlanPara[15]*8+3] == 1)
  {
  	document.forms[0].rptBssid.value = wlanPara[39];
  }
  if(modeElemDisplayInfo[wlanPara[15]*8+4] == 1)
  {
  	document.forms[0].urptBssid.value = wlanPara[40];
  }
  if(modeElemDisplayInfo[wlanPara[15]*8+5] == 1)
  {
  	document.forms[0].mptBssid1.value = wlanPara[41];
  	document.forms[0].mptBssid2.value = wlanPara[42];
  	document.forms[0].mptBssid3.value = wlanPara[43];
  	document.forms[0].mptBssid4.value = wlanPara[44];
  }
  document.forms[0].ap.checked = wlanPara[8];
  if(modeElemDisplayInfo[wlanPara[15]*8+7] == 1)
  	document.forms[0].broadcast.checked = wlanPara[9];
  if(modeElemDisplayInfo[wlanPara[15]*8+6] == 1)
		document.forms[0].channel.value = wlanPara[10];
	document.forms[0].mode.value = wlanPara[7];
	document.forms[0].chanWidth.value = wlanPara[11];
	changeMode();
	changeRate();
	checkRegion();
	if(wlanPara[15] != 3)
 		document.forms[0].rate.value = wlanPara[12];
	document.forms[0].wdsbrl.checked = wlanPara[22];
	document.forms[0].brlssid.value  = wlanPara[23];
	document.forms[0].brlbssid.value  = wlanPara[24];
	document.forms[0].keytype.value = wlanPara[25];
	document.forms[0].keytext.value = wlanPara[26];
	document.forms[0].wepindex.value = wlanPara[27];   
	document.forms[0].authtype.value = wlanPara[32];   
	onVlanEnable();  
</SCRIPT>
