# 1 "../src/band.c"
# 1 "<built-in>"
# 1 "<command line>"
# 1 "../src/band.c"
# 20 "../src/band.c"
# 1 "/usr/include/stdio.h" 1 3 4
# 28 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 314 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 315 "/usr/include/features.h" 2 3 4
# 337 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4
# 338 "/usr/include/features.h" 2 3 4
# 29 "/usr/include/stdio.h" 2 3 4





# 1 "/usr/lib/gcc/i386-redhat-linux/3.4.3/include/stddef.h" 1 3 4
# 213 "/usr/lib/gcc/i386-redhat-linux/3.4.3/include/stddef.h" 3 4
typedef unsigned int size_t;
# 35 "/usr/include/stdio.h" 2 3 4

# 1 "/usr/include/bits/types.h" 1 3 4
# 28 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 29 "/usr/include/bits/types.h" 2 3 4


# 1 "/usr/lib/gcc/i386-redhat-linux/3.4.3/include/stddef.h" 1 3 4
# 32 "/usr/include/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;




__extension__ typedef signed long long int __int64_t;
__extension__ typedef unsigned long long int __uint64_t;







__extension__ typedef long long int __quad_t;
__extension__ typedef unsigned long long int __u_quad_t;
# 129 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/typesizes.h" 1 3 4
# 130 "/usr/include/bits/types.h" 2 3 4






__extension__ typedef __u_quad_t __dev_t;
__extension__ typedef unsigned int __uid_t;
__extension__ typedef unsigned int __gid_t;
__extension__ typedef unsigned long int __ino_t;
__extension__ typedef __u_quad_t __ino64_t;
__extension__ typedef unsigned int __mode_t;
__extension__ typedef unsigned int __nlink_t;
__extension__ typedef long int __off_t;
__extension__ typedef __quad_t __off64_t;
__extension__ typedef int __pid_t;
__extension__ typedef struct { int __val[2]; } __fsid_t;
__extension__ typedef long int __clock_t;
__extension__ typedef unsigned long int __rlim_t;
__extension__ typedef __u_quad_t __rlim64_t;
__extension__ typedef unsigned int __id_t;
__extension__ typedef long int __time_t;
__extension__ typedef unsigned int __useconds_t;
__extension__ typedef long int __suseconds_t;

__extension__ typedef int __daddr_t;
__extension__ typedef long int __swblk_t;
__extension__ typedef int __key_t;


__extension__ typedef int __clockid_t;


__extension__ typedef int __timer_t;


__extension__ typedef long int __blksize_t;




__extension__ typedef long int __blkcnt_t;
__extension__ typedef __quad_t __blkcnt64_t;


__extension__ typedef unsigned long int __fsblkcnt_t;
__extension__ typedef __u_quad_t __fsblkcnt64_t;


__extension__ typedef unsigned long int __fsfilcnt_t;
__extension__ typedef __u_quad_t __fsfilcnt64_t;

__extension__ typedef int __ssize_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


__extension__ typedef int __intptr_t;


__extension__ typedef unsigned int __socklen_t;
# 37 "/usr/include/stdio.h" 2 3 4









typedef struct _IO_FILE FILE;





# 62 "/usr/include/stdio.h" 3 4
typedef struct _IO_FILE __FILE;
# 72 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/libio.h" 1 3 4
# 32 "/usr/include/libio.h" 3 4
# 1 "/usr/include/_G_config.h" 1 3 4
# 14 "/usr/include/_G_config.h" 3 4
# 1 "/usr/lib/gcc/i386-redhat-linux/3.4.3/include/stddef.h" 1 3 4
# 325 "/usr/lib/gcc/i386-redhat-linux/3.4.3/include/stddef.h" 3 4
typedef long int wchar_t;
# 354 "/usr/lib/gcc/i386-redhat-linux/3.4.3/include/stddef.h" 3 4
typedef unsigned int wint_t;
# 15 "/usr/include/_G_config.h" 2 3 4
# 24 "/usr/include/_G_config.h" 3 4
# 1 "/usr/include/wchar.h" 1 3 4
# 48 "/usr/include/wchar.h" 3 4
# 1 "/usr/lib/gcc/i386-redhat-linux/3.4.3/include/stddef.h" 1 3 4
# 49 "/usr/include/wchar.h" 2 3 4

# 1 "/usr/include/bits/wchar.h" 1 3 4
# 51 "/usr/include/wchar.h" 2 3 4
# 76 "/usr/include/wchar.h" 3 4
typedef struct
{
  int __count;
  union
  {
    wint_t __wch;
    char __wchb[4];
  } __value;
} __mbstate_t;
# 25 "/usr/include/_G_config.h" 2 3 4

typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 44 "/usr/include/_G_config.h" 3 4
# 1 "/usr/include/gconv.h" 1 3 4
# 28 "/usr/include/gconv.h" 3 4
# 1 "/usr/include/wchar.h" 1 3 4
# 48 "/usr/include/wchar.h" 3 4
# 1 "/usr/lib/gcc/i386-redhat-linux/3.4.3/include/stddef.h" 1 3 4
# 49 "/usr/include/wchar.h" 2 3 4
# 29 "/usr/include/gconv.h" 2 3 4


# 1 "/usr/lib/gcc/i386-redhat-linux/3.4.3/include/stddef.h" 1 3 4
# 32 "/usr/include/gconv.h" 2 3 4





enum
{
  __GCONV_OK = 0,
  __GCONV_NOCONV,
  __GCONV_NODB,
  __GCONV_NOMEM,

  __GCONV_EMPTY_INPUT,
  __GCONV_FULL_OUTPUT,
  __GCONV_ILLEGAL_INPUT,
  __GCONV_INCOMPLETE_INPUT,

  __GCONV_ILLEGAL_DESCRIPTOR,
  __GCONV_INTERNAL_ERROR
};



enum
{
  __GCONV_IS_LAST = 0x0001,
  __GCONV_IGNORE_ERRORS = 0x0002
};



struct __gconv_step;
struct __gconv_step_data;
struct __gconv_loaded_object;
struct __gconv_trans_data;



typedef int (*__gconv_fct) (struct __gconv_step *, struct __gconv_step_data *,
       __const unsigned char **, __const unsigned char *,
       unsigned char **, size_t *, int, int);


typedef wint_t (*__gconv_btowc_fct) (struct __gconv_step *, unsigned char);


typedef int (*__gconv_init_fct) (struct __gconv_step *);
typedef void (*__gconv_end_fct) (struct __gconv_step *);



typedef int (*__gconv_trans_fct) (struct __gconv_step *,
      struct __gconv_step_data *, void *,
      __const unsigned char *,
      __const unsigned char **,
      __const unsigned char *, unsigned char **,
      size_t *);


typedef int (*__gconv_trans_context_fct) (void *, __const unsigned char *,
       __const unsigned char *,
       unsigned char *, unsigned char *);


typedef int (*__gconv_trans_query_fct) (__const char *, __const char ***,
     size_t *);


typedef int (*__gconv_trans_init_fct) (void **, const char *);
typedef void (*__gconv_trans_end_fct) (void *);

struct __gconv_trans_data
{

  __gconv_trans_fct __trans_fct;
  __gconv_trans_context_fct __trans_context_fct;
  __gconv_trans_end_fct __trans_end_fct;
  void *__data;
  struct __gconv_trans_data *__next;
};



struct __gconv_step
{
  struct __gconv_loaded_object *__shlib_handle;
  __const char *__modname;

  int __counter;

  char *__from_name;
  char *__to_name;

  __gconv_fct __fct;
  __gconv_btowc_fct __btowc_fct;
  __gconv_init_fct __init_fct;
  __gconv_end_fct __end_fct;



  int __min_needed_from;
  int __max_needed_from;
  int __min_needed_to;
  int __max_needed_to;


  int __stateful;

  void *__data;
};



struct __gconv_step_data
{
  unsigned char *__outbuf;
  unsigned char *__outbufend;



  int __flags;



  int __invocation_counter;



  int __internal_use;

  __mbstate_t *__statep;
  __mbstate_t __state;



  struct __gconv_trans_data *__trans;
};



typedef struct __gconv_info
{
  size_t __nsteps;
  struct __gconv_step *__steps;
  __extension__ struct __gconv_step_data __data [];
} *__gconv_t;
# 45 "/usr/include/_G_config.h" 2 3 4
typedef union
{
  struct __gconv_info __cd;
  struct
  {
    struct __gconv_info __cd;
    struct __gconv_step_data __data;
  } __combined;
} _G_iconv_t;

typedef int _G_int16_t __attribute__ ((__mode__ (__HI__)));
typedef int _G_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int _G_uint16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int _G_uint32_t __attribute__ ((__mode__ (__SI__)));
# 33 "/usr/include/libio.h" 2 3 4
# 53 "/usr/include/libio.h" 3 4
# 1 "/usr/lib/gcc/i386-redhat-linux/3.4.3/include/stdarg.h" 1 3 4
# 43 "/usr/lib/gcc/i386-redhat-linux/3.4.3/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 54 "/usr/include/libio.h" 2 3 4
# 166 "/usr/include/libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;
# 176 "/usr/include/libio.h" 3 4
typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 199 "/usr/include/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 267 "/usr/include/libio.h" 3 4
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 315 "/usr/include/libio.h" 3 4
  __off64_t _offset;





  void *__pad1;
  void *__pad2;

  int _mode;

  char _unused2[15 * sizeof (int) - 2 * sizeof (void *)];

};


typedef struct _IO_FILE _IO_FILE;


struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 354 "/usr/include/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, __const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);
# 406 "/usr/include/libio.h" 3 4
extern int __underflow (_IO_FILE *) __attribute__ ((__nothrow__));
extern int __uflow (_IO_FILE *) __attribute__ ((__nothrow__));
extern int __overflow (_IO_FILE *, int) __attribute__ ((__nothrow__));
extern wint_t __wunderflow (_IO_FILE *) __attribute__ ((__nothrow__));
extern wint_t __wuflow (_IO_FILE *) __attribute__ ((__nothrow__));
extern wint_t __woverflow (_IO_FILE *, wint_t) __attribute__ ((__nothrow__));
# 444 "/usr/include/libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp) __attribute__ ((__nothrow__));
extern int _IO_putc (int __c, _IO_FILE *__fp) __attribute__ ((__nothrow__));
extern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__));
extern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__));

extern int _IO_peekc_locked (_IO_FILE *__fp) __attribute__ ((__nothrow__));





extern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__));
extern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__));
extern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__));
# 474 "/usr/include/libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict) __attribute__ ((__nothrow__));
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list) __attribute__ ((__nothrow__));
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t) __attribute__ ((__nothrow__));
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t) __attribute__ ((__nothrow__));

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int) __attribute__ ((__nothrow__));
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int) __attribute__ ((__nothrow__));

extern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__));
# 73 "/usr/include/stdio.h" 2 3 4
# 86 "/usr/include/stdio.h" 3 4


typedef _G_fpos_t fpos_t;




# 138 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio_lim.h" 1 3 4
# 139 "/usr/include/stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;









extern int remove (__const char *__filename) __attribute__ ((__nothrow__));

extern int rename (__const char *__old, __const char *__new) __attribute__ ((__nothrow__));









extern FILE *tmpfile (void);
# 180 "/usr/include/stdio.h" 3 4
extern char *tmpnam (char *__s) __attribute__ ((__nothrow__));





extern char *tmpnam_r (char *__s) __attribute__ ((__nothrow__));
# 198 "/usr/include/stdio.h" 3 4
extern char *tempnam (__const char *__dir, __const char *__pfx)
     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__));








extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);

# 223 "/usr/include/stdio.h" 3 4
extern int fflush_unlocked (FILE *__stream);
# 237 "/usr/include/stdio.h" 3 4






extern FILE *fopen (__const char *__restrict __filename,
      __const char *__restrict __modes);




extern FILE *freopen (__const char *__restrict __filename,
        __const char *__restrict __modes,
        FILE *__restrict __stream);
# 264 "/usr/include/stdio.h" 3 4

# 275 "/usr/include/stdio.h" 3 4
extern FILE *fdopen (int __fd, __const char *__modes) __attribute__ ((__nothrow__));
# 296 "/usr/include/stdio.h" 3 4



extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__));



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__));





extern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,
         size_t __size) __attribute__ ((__nothrow__));


extern void setlinebuf (FILE *__stream) __attribute__ ((__nothrow__));








extern int fprintf (FILE *__restrict __stream,
      __const char *__restrict __format, ...);




extern int printf (__const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      __const char *__restrict __format, ...) __attribute__ ((__nothrow__));





extern int vfprintf (FILE *__restrict __s, __const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (__const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, __const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));





extern int snprintf (char *__restrict __s, size_t __maxlen,
       __const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        __const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));

# 390 "/usr/include/stdio.h" 3 4





extern int fscanf (FILE *__restrict __stream,
     __const char *__restrict __format, ...);




extern int scanf (__const char *__restrict __format, ...);

extern int sscanf (__const char *__restrict __s,
     __const char *__restrict __format, ...) __attribute__ ((__nothrow__));

# 432 "/usr/include/stdio.h" 3 4





extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);

# 456 "/usr/include/stdio.h" 3 4
extern int getc_unlocked (FILE *__stream);
extern int getchar_unlocked (void);
# 467 "/usr/include/stdio.h" 3 4
extern int fgetc_unlocked (FILE *__stream);











extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);

# 500 "/usr/include/stdio.h" 3 4
extern int fputc_unlocked (int __c, FILE *__stream);







extern int putc_unlocked (int __c, FILE *__stream);
extern int putchar_unlocked (int __c);






extern int getw (FILE *__stream);


extern int putw (int __w, FILE *__stream);








extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream);






extern char *gets (char *__s);

# 580 "/usr/include/stdio.h" 3 4





extern int fputs (__const char *__restrict __s, FILE *__restrict __stream);





extern int puts (__const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream);




extern size_t fwrite (__const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);

# 633 "/usr/include/stdio.h" 3 4
extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
         size_t __n, FILE *__restrict __stream);
extern size_t fwrite_unlocked (__const void *__restrict __ptr, size_t __size,
          size_t __n, FILE *__restrict __stream);








extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream);




extern void rewind (FILE *__stream);

# 688 "/usr/include/stdio.h" 3 4






extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, __const fpos_t *__pos);
# 711 "/usr/include/stdio.h" 3 4

# 720 "/usr/include/stdio.h" 3 4


extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__));

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__));




extern void clearerr_unlocked (FILE *__stream) __attribute__ ((__nothrow__));
extern int feof_unlocked (FILE *__stream) __attribute__ ((__nothrow__));
extern int ferror_unlocked (FILE *__stream) __attribute__ ((__nothrow__));








extern void perror (__const char *__s);






# 1 "/usr/include/bits/sys_errlist.h" 1 3 4
# 27 "/usr/include/bits/sys_errlist.h" 3 4
extern int sys_nerr;
extern __const char *__const sys_errlist[];
# 750 "/usr/include/stdio.h" 2 3 4




extern int fileno (FILE *__stream) __attribute__ ((__nothrow__));




extern int fileno_unlocked (FILE *__stream) __attribute__ ((__nothrow__));
# 769 "/usr/include/stdio.h" 3 4
extern FILE *popen (__const char *__command, __const char *__modes);





extern int pclose (FILE *__stream);





extern char *ctermid (char *__s) __attribute__ ((__nothrow__));
# 809 "/usr/include/stdio.h" 3 4
extern void flockfile (FILE *__stream) __attribute__ ((__nothrow__));



extern int ftrylockfile (FILE *__stream) __attribute__ ((__nothrow__));


extern void funlockfile (FILE *__stream) __attribute__ ((__nothrow__));
# 836 "/usr/include/stdio.h" 3 4

# 21 "../src/band.c" 2
# 1 "/usr/include/assert.h" 1 3 4
# 65 "/usr/include/assert.h" 3 4



extern void __assert_fail (__const char *__assertion, __const char *__file,
      unsigned int __line, __const char *__function)
     __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));


extern void __assert_perror_fail (int __errnum, __const char *__file,
      unsigned int __line,
      __const char *__function)
     __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));




extern void __assert (const char *__assertion, const char *__file, int __line)
     __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));



# 22 "../src/band.c" 2

# 1 "../src/globals.h" 1
# 28 "../src/globals.h"
# 1 "/usr/include/inttypes.h" 1 3 4
# 28 "/usr/include/inttypes.h" 3 4
# 1 "/usr/include/stdint.h" 1 3 4
# 28 "/usr/include/stdint.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 29 "/usr/include/stdint.h" 2 3 4
# 37 "/usr/include/stdint.h" 3 4
typedef signed char int8_t;
typedef short int int16_t;
typedef int int32_t;



__extension__
typedef long long int int64_t;




typedef unsigned char uint8_t;
typedef unsigned short int uint16_t;

typedef unsigned int uint32_t;





__extension__
typedef unsigned long long int uint64_t;






typedef signed char int_least8_t;
typedef short int int_least16_t;
typedef int int_least32_t;



__extension__
typedef long long int int_least64_t;



typedef unsigned char uint_least8_t;
typedef unsigned short int uint_least16_t;
typedef unsigned int uint_least32_t;



__extension__
typedef unsigned long long int uint_least64_t;






typedef signed char int_fast8_t;





typedef int int_fast16_t;
typedef int int_fast32_t;
__extension__
typedef long long int int_fast64_t;



typedef unsigned char uint_fast8_t;





typedef unsigned int uint_fast16_t;
typedef unsigned int uint_fast32_t;
__extension__
typedef unsigned long long int uint_fast64_t;
# 126 "/usr/include/stdint.h" 3 4
typedef int intptr_t;


typedef unsigned int uintptr_t;
# 138 "/usr/include/stdint.h" 3 4
__extension__
typedef long long int intmax_t;
__extension__
typedef unsigned long long int uintmax_t;
# 29 "/usr/include/inttypes.h" 2 3 4






typedef long int __gwchar_t;
# 274 "/usr/include/inttypes.h" 3 4

# 288 "/usr/include/inttypes.h" 3 4
typedef struct
  {
    long long int quot;
    long long int rem;
  } imaxdiv_t;





extern intmax_t imaxabs (intmax_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__const__));


extern imaxdiv_t imaxdiv (intmax_t __numer, intmax_t __denom)
      __attribute__ ((__nothrow__)) __attribute__ ((__const__));


extern intmax_t strtoimax (__const char *__restrict __nptr,
      char **__restrict __endptr, int __base) __attribute__ ((__nothrow__));


extern uintmax_t strtoumax (__const char *__restrict __nptr,
       char ** __restrict __endptr, int __base) __attribute__ ((__nothrow__));


extern intmax_t wcstoimax (__const __gwchar_t *__restrict __nptr,
      __gwchar_t **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__));


extern uintmax_t wcstoumax (__const __gwchar_t *__restrict __nptr,
       __gwchar_t ** __restrict __endptr, int __base)
     __attribute__ ((__nothrow__));
# 459 "/usr/include/inttypes.h" 3 4

# 29 "../src/globals.h" 2
# 1 "/usr/include/sys/time.h" 1 3 4
# 26 "/usr/include/sys/time.h" 3 4
# 1 "/usr/include/time.h" 1 3 4
# 74 "/usr/include/time.h" 3 4


typedef __time_t time_t;



# 27 "/usr/include/sys/time.h" 2 3 4

# 1 "/usr/include/bits/time.h" 1 3 4
# 69 "/usr/include/bits/time.h" 3 4
struct timeval
  {
    __time_t tv_sec;
    __suseconds_t tv_usec;
  };
# 29 "/usr/include/sys/time.h" 2 3 4

# 1 "/usr/include/sys/select.h" 1 3 4
# 31 "/usr/include/sys/select.h" 3 4
# 1 "/usr/include/bits/select.h" 1 3 4
# 32 "/usr/include/sys/select.h" 2 3 4


# 1 "/usr/include/bits/sigset.h" 1 3 4
# 23 "/usr/include/bits/sigset.h" 3 4
typedef int __sig_atomic_t;




typedef struct
  {
    unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
  } __sigset_t;
# 35 "/usr/include/sys/select.h" 2 3 4



typedef __sigset_t sigset_t;





# 1 "/usr/include/time.h" 1 3 4
# 118 "/usr/include/time.h" 3 4
struct timespec
  {
    __time_t tv_sec;
    long int tv_nsec;
  };
# 45 "/usr/include/sys/select.h" 2 3 4

# 1 "/usr/include/bits/time.h" 1 3 4
# 47 "/usr/include/sys/select.h" 2 3 4


typedef __suseconds_t suseconds_t;





typedef long int __fd_mask;
# 67 "/usr/include/sys/select.h" 3 4
typedef struct
  {






    __fd_mask __fds_bits[1024 / (8 * sizeof (__fd_mask))];


  } fd_set;






typedef __fd_mask fd_mask;
# 99 "/usr/include/sys/select.h" 3 4

# 109 "/usr/include/sys/select.h" 3 4
extern int select (int __nfds, fd_set *__restrict __readfds,
     fd_set *__restrict __writefds,
     fd_set *__restrict __exceptfds,
     struct timeval *__restrict __timeout);
# 128 "/usr/include/sys/select.h" 3 4

# 31 "/usr/include/sys/time.h" 2 3 4








# 56 "/usr/include/sys/time.h" 3 4
struct timezone
  {
    int tz_minuteswest;
    int tz_dsttime;
  };

typedef struct timezone *__restrict __timezone_ptr_t;
# 72 "/usr/include/sys/time.h" 3 4
extern int gettimeofday (struct timeval *__restrict __tv,
    __timezone_ptr_t __tz) __attribute__ ((__nothrow__));




extern int settimeofday (__const struct timeval *__tv,
    __const struct timezone *__tz) __attribute__ ((__nothrow__));





extern int adjtime (__const struct timeval *__delta,
      struct timeval *__olddelta) __attribute__ ((__nothrow__));




enum __itimer_which
  {

    ITIMER_REAL = 0,


    ITIMER_VIRTUAL = 1,



    ITIMER_PROF = 2

  };



struct itimerval
  {

    struct timeval it_interval;

    struct timeval it_value;
  };






typedef int __itimer_which_t;




extern int getitimer (__itimer_which_t __which,
        struct itimerval *__value) __attribute__ ((__nothrow__));




extern int setitimer (__itimer_which_t __which,
        __const struct itimerval *__restrict __new,
        struct itimerval *__restrict __old) __attribute__ ((__nothrow__));




extern int utimes (__const char *__file, __const struct timeval __tvp[2])
     __attribute__ ((__nothrow__));



extern int lutimes (__const char *__file, __const struct timeval __tvp[2])
     __attribute__ ((__nothrow__));


extern int futimes (int __fd, __const struct timeval __tvp[2]) __attribute__ ((__nothrow__));
# 181 "/usr/include/sys/time.h" 3 4

# 30 "../src/globals.h" 2
# 1 "/usr/include/sys/types.h" 1 3 4
# 29 "/usr/include/sys/types.h" 3 4






typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;




typedef __loff_t loff_t;



typedef __ino_t ino_t;
# 62 "/usr/include/sys/types.h" 3 4
typedef __dev_t dev_t;




typedef __gid_t gid_t;




typedef __mode_t mode_t;




typedef __nlink_t nlink_t;




typedef __uid_t uid_t;





typedef __off_t off_t;
# 100 "/usr/include/sys/types.h" 3 4
typedef __pid_t pid_t;




typedef __id_t id_t;




typedef __ssize_t ssize_t;





typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;





typedef __key_t key_t;
# 133 "/usr/include/sys/types.h" 3 4
# 1 "/usr/include/time.h" 1 3 4
# 92 "/usr/include/time.h" 3 4
typedef __clockid_t clockid_t;
# 104 "/usr/include/time.h" 3 4
typedef __timer_t timer_t;
# 134 "/usr/include/sys/types.h" 2 3 4
# 147 "/usr/include/sys/types.h" 3 4
# 1 "/usr/lib/gcc/i386-redhat-linux/3.4.3/include/stddef.h" 1 3 4
# 148 "/usr/include/sys/types.h" 2 3 4



typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;
# 197 "/usr/include/sys/types.h" 3 4
typedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));
typedef unsigned int u_int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int u_int64_t __attribute__ ((__mode__ (__DI__)));

typedef int register_t __attribute__ ((__mode__ (__word__)));
# 213 "/usr/include/sys/types.h" 3 4
# 1 "/usr/include/endian.h" 1 3 4
# 37 "/usr/include/endian.h" 3 4
# 1 "/usr/include/bits/endian.h" 1 3 4
# 38 "/usr/include/endian.h" 2 3 4
# 214 "/usr/include/sys/types.h" 2 3 4





# 1 "/usr/include/sys/sysmacros.h" 1 3 4
# 29 "/usr/include/sys/sysmacros.h" 3 4
__extension__
extern __inline unsigned int gnu_dev_major (unsigned long long int __dev)
     __attribute__ ((__nothrow__));
__extension__
extern __inline unsigned int gnu_dev_minor (unsigned long long int __dev)
     __attribute__ ((__nothrow__));
__extension__
extern __inline unsigned long long int gnu_dev_makedev (unsigned int __major,
       unsigned int __minor)
     __attribute__ ((__nothrow__));


__extension__ extern __inline unsigned int
__attribute__ ((__nothrow__)) gnu_dev_major (unsigned long long int __dev)
{
  return ((__dev >> 8) & 0xfff) | ((unsigned int) (__dev >> 32) & ~0xfff);
}

__extension__ extern __inline unsigned int
__attribute__ ((__nothrow__)) gnu_dev_minor (unsigned long long int __dev)
{
  return (__dev & 0xff) | ((unsigned int) (__dev >> 12) & ~0xff);
}

__extension__ extern __inline unsigned long long int
__attribute__ ((__nothrow__)) gnu_dev_makedev (unsigned int __major, unsigned int __minor)
{
  return ((__minor & 0xff) | ((__major & 0xfff) << 8)
   | (((unsigned long long int) (__minor & ~0xff)) << 12)
   | (((unsigned long long int) (__major & ~0xfff)) << 32));
}
# 220 "/usr/include/sys/types.h" 2 3 4
# 231 "/usr/include/sys/types.h" 3 4
typedef __blkcnt_t blkcnt_t;



typedef __fsblkcnt_t fsblkcnt_t;



typedef __fsfilcnt_t fsfilcnt_t;
# 266 "/usr/include/sys/types.h" 3 4
# 1 "/usr/include/bits/pthreadtypes.h" 1 3 4
# 23 "/usr/include/bits/pthreadtypes.h" 3 4
# 1 "/usr/include/bits/sched.h" 1 3 4
# 83 "/usr/include/bits/sched.h" 3 4
struct __sched_param
  {
    int __sched_priority;
  };
# 24 "/usr/include/bits/pthreadtypes.h" 2 3 4


struct _pthread_fastlock
{
  long int __status;
  int __spinlock;

};



typedef struct _pthread_descr_struct *_pthread_descr;





typedef struct __pthread_attr_s
{
  int __detachstate;
  int __schedpolicy;
  struct __sched_param __schedparam;
  int __inheritsched;
  int __scope;
  size_t __guardsize;
  int __stackaddr_set;
  void *__stackaddr;
  size_t __stacksize;
} pthread_attr_t;





__extension__ typedef long long __pthread_cond_align_t;




typedef struct
{
  struct _pthread_fastlock __c_lock;
  _pthread_descr __c_waiting;
  char __padding[48 - sizeof (struct _pthread_fastlock)
   - sizeof (_pthread_descr) - sizeof (__pthread_cond_align_t)];
  __pthread_cond_align_t __align;
} pthread_cond_t;



typedef struct
{
  int __dummy;
} pthread_condattr_t;


typedef unsigned int pthread_key_t;





typedef struct
{
  int __m_reserved;
  int __m_count;
  _pthread_descr __m_owner;
  int __m_kind;
  struct _pthread_fastlock __m_lock;
} pthread_mutex_t;



typedef struct
{
  int __mutexkind;
} pthread_mutexattr_t;



typedef int pthread_once_t;
# 150 "/usr/include/bits/pthreadtypes.h" 3 4
typedef unsigned long int pthread_t;
# 267 "/usr/include/sys/types.h" 2 3 4



# 31 "../src/globals.h" 2
# 1 "/usr/include/arpa/inet.h" 1 3 4
# 23 "/usr/include/arpa/inet.h" 3 4
# 1 "/usr/include/netinet/in.h" 1 3 4
# 24 "/usr/include/netinet/in.h" 3 4
# 1 "/usr/include/sys/socket.h" 1 3 4
# 25 "/usr/include/sys/socket.h" 3 4


# 1 "/usr/include/sys/uio.h" 1 3 4
# 26 "/usr/include/sys/uio.h" 3 4



# 1 "/usr/include/bits/uio.h" 1 3 4
# 42 "/usr/include/bits/uio.h" 3 4
struct iovec
  {
    void *iov_base;
    size_t iov_len;
  };
# 30 "/usr/include/sys/uio.h" 2 3 4
# 40 "/usr/include/sys/uio.h" 3 4
extern ssize_t readv (int __fd, __const struct iovec *__iovec, int __count);
# 50 "/usr/include/sys/uio.h" 3 4
extern ssize_t writev (int __fd, __const struct iovec *__iovec, int __count);


# 28 "/usr/include/sys/socket.h" 2 3 4

# 1 "/usr/lib/gcc/i386-redhat-linux/3.4.3/include/stddef.h" 1 3 4
# 30 "/usr/include/sys/socket.h" 2 3 4





# 1 "/usr/include/bits/socket.h" 1 3 4
# 29 "/usr/include/bits/socket.h" 3 4
# 1 "/usr/lib/gcc/i386-redhat-linux/3.4.3/include/stddef.h" 1 3 4
# 30 "/usr/include/bits/socket.h" 2 3 4

# 1 "/usr/lib/gcc/i386-redhat-linux/3.4.3/include/limits.h" 1 3 4
# 11 "/usr/lib/gcc/i386-redhat-linux/3.4.3/include/limits.h" 3 4
# 1 "/usr/lib/gcc/i386-redhat-linux/3.4.3/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/i386-redhat-linux/3.4.3/include/limits.h" 1 3 4
# 122 "/usr/lib/gcc/i386-redhat-linux/3.4.3/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 144 "/usr/include/limits.h" 3 4
# 1 "/usr/include/bits/posix1_lim.h" 1 3 4
# 153 "/usr/include/bits/posix1_lim.h" 3 4
# 1 "/usr/include/bits/local_lim.h" 1 3 4
# 36 "/usr/include/bits/local_lim.h" 3 4
# 1 "/usr/include/linux/limits.h" 1 3 4
# 37 "/usr/include/bits/local_lim.h" 2 3 4
# 154 "/usr/include/bits/posix1_lim.h" 2 3 4
# 145 "/usr/include/limits.h" 2 3 4



# 1 "/usr/include/bits/posix2_lim.h" 1 3 4
# 149 "/usr/include/limits.h" 2 3 4
# 123 "/usr/lib/gcc/i386-redhat-linux/3.4.3/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/i386-redhat-linux/3.4.3/include/syslimits.h" 2 3 4
# 12 "/usr/lib/gcc/i386-redhat-linux/3.4.3/include/limits.h" 2 3 4
# 32 "/usr/include/bits/socket.h" 2 3 4




typedef __socklen_t socklen_t;




enum __socket_type
{
  SOCK_STREAM = 1,


  SOCK_DGRAM = 2,


  SOCK_RAW = 3,

  SOCK_RDM = 4,

  SOCK_SEQPACKET = 5,


  SOCK_PACKET = 10



};
# 142 "/usr/include/bits/socket.h" 3 4
# 1 "/usr/include/bits/sockaddr.h" 1 3 4
# 29 "/usr/include/bits/sockaddr.h" 3 4
typedef unsigned short int sa_family_t;
# 143 "/usr/include/bits/socket.h" 2 3 4


struct sockaddr
  {
    sa_family_t sa_family;
    char sa_data[14];
  };
# 162 "/usr/include/bits/socket.h" 3 4
struct sockaddr_storage
  {
    sa_family_t ss_family;
    __uint32_t __ss_align;
    char __ss_padding[(128 - (2 * sizeof (__uint32_t)))];
  };



enum
  {
    MSG_OOB = 0x01,

    MSG_PEEK = 0x02,

    MSG_DONTROUTE = 0x04,






    MSG_CTRUNC = 0x08,

    MSG_PROXY = 0x10,

    MSG_TRUNC = 0x20,

    MSG_DONTWAIT = 0x40,

    MSG_EOR = 0x80,

    MSG_WAITALL = 0x100,

    MSG_FIN = 0x200,

    MSG_SYN = 0x400,

    MSG_CONFIRM = 0x800,

    MSG_RST = 0x1000,

    MSG_ERRQUEUE = 0x2000,

    MSG_NOSIGNAL = 0x4000,

    MSG_MORE = 0x8000

  };




struct msghdr
  {
    void *msg_name;
    socklen_t msg_namelen;

    struct iovec *msg_iov;
    size_t msg_iovlen;

    void *msg_control;
    size_t msg_controllen;

    int msg_flags;
  };


struct cmsghdr
  {
    size_t cmsg_len;

    int cmsg_level;
    int cmsg_type;

    __extension__ unsigned char __cmsg_data [];

  };
# 257 "/usr/include/bits/socket.h" 3 4
extern struct cmsghdr *__cmsg_nxthdr (struct msghdr *__mhdr,
          struct cmsghdr *__cmsg) __attribute__ ((__nothrow__));
# 284 "/usr/include/bits/socket.h" 3 4
enum
  {
    SCM_RIGHTS = 0x01


    , SCM_CREDENTIALS = 0x02


  };



struct ucred
{
  pid_t pid;
  uid_t uid;
  gid_t gid;
};


# 1 "/usr/include/asm/socket.h" 1 3 4



# 1 "/usr/include/asm/sockios.h" 1 3 4
# 5 "/usr/include/asm/socket.h" 2 3 4
# 305 "/usr/include/bits/socket.h" 2 3 4



struct linger
  {
    int l_onoff;
    int l_linger;
  };
# 36 "/usr/include/sys/socket.h" 2 3 4




struct osockaddr
  {
    unsigned short int sa_family;
    unsigned char sa_data[14];
  };




enum
{
  SHUT_RD = 0,

  SHUT_WR,

  SHUT_RDWR

};
# 100 "/usr/include/sys/socket.h" 3 4
extern int socket (int __domain, int __type, int __protocol) __attribute__ ((__nothrow__));





extern int socketpair (int __domain, int __type, int __protocol,
         int __fds[2]) __attribute__ ((__nothrow__));


extern int bind (int __fd, __const struct sockaddr * __addr, socklen_t __len)
     __attribute__ ((__nothrow__));


extern int getsockname (int __fd, struct sockaddr *__restrict __addr,
   socklen_t *__restrict __len) __attribute__ ((__nothrow__));
# 124 "/usr/include/sys/socket.h" 3 4
extern int connect (int __fd, __const struct sockaddr * __addr, socklen_t __len);



extern int getpeername (int __fd, struct sockaddr *__restrict __addr,
   socklen_t *__restrict __len) __attribute__ ((__nothrow__));






extern ssize_t send (int __fd, __const void *__buf, size_t __n, int __flags);






extern ssize_t recv (int __fd, void *__buf, size_t __n, int __flags);






extern ssize_t sendto (int __fd, __const void *__buf, size_t __n,
         int __flags, __const struct sockaddr * __addr,
         socklen_t __addr_len);
# 161 "/usr/include/sys/socket.h" 3 4
extern ssize_t recvfrom (int __fd, void *__restrict __buf, size_t __n,
    int __flags, struct sockaddr *__restrict __addr,
    socklen_t *__restrict __addr_len);







extern ssize_t sendmsg (int __fd, __const struct msghdr *__message,
   int __flags);






extern ssize_t recvmsg (int __fd, struct msghdr *__message, int __flags);





extern int getsockopt (int __fd, int __level, int __optname,
         void *__restrict __optval,
         socklen_t *__restrict __optlen) __attribute__ ((__nothrow__));




extern int setsockopt (int __fd, int __level, int __optname,
         __const void *__optval, socklen_t __optlen) __attribute__ ((__nothrow__));





extern int listen (int __fd, int __n) __attribute__ ((__nothrow__));
# 209 "/usr/include/sys/socket.h" 3 4
extern int accept (int __fd, struct sockaddr *__restrict __addr,
     socklen_t *__restrict __addr_len);







extern int shutdown (int __fd, int __how) __attribute__ ((__nothrow__));
# 231 "/usr/include/sys/socket.h" 3 4
extern int isfdtype (int __fd, int __fdtype) __attribute__ ((__nothrow__));



# 25 "/usr/include/netinet/in.h" 2 3 4






enum
  {
    IPPROTO_IP = 0,

    IPPROTO_HOPOPTS = 0,

    IPPROTO_ICMP = 1,

    IPPROTO_IGMP = 2,

    IPPROTO_IPIP = 4,

    IPPROTO_TCP = 6,

    IPPROTO_EGP = 8,

    IPPROTO_PUP = 12,

    IPPROTO_UDP = 17,

    IPPROTO_IDP = 22,

    IPPROTO_TP = 29,

    IPPROTO_IPV6 = 41,

    IPPROTO_ROUTING = 43,

    IPPROTO_FRAGMENT = 44,

    IPPROTO_RSVP = 46,

    IPPROTO_GRE = 47,

    IPPROTO_ESP = 50,

    IPPROTO_AH = 51,

    IPPROTO_ICMPV6 = 58,

    IPPROTO_NONE = 59,

    IPPROTO_DSTOPTS = 60,

    IPPROTO_MTP = 92,

    IPPROTO_ENCAP = 98,

    IPPROTO_PIM = 103,

    IPPROTO_COMP = 108,

    IPPROTO_SCTP = 132,

    IPPROTO_RAW = 255,

    IPPROTO_MAX
  };



typedef uint16_t in_port_t;


enum
  {
    IPPORT_ECHO = 7,
    IPPORT_DISCARD = 9,
    IPPORT_SYSTAT = 11,
    IPPORT_DAYTIME = 13,
    IPPORT_NETSTAT = 15,
    IPPORT_FTP = 21,
    IPPORT_TELNET = 23,
    IPPORT_SMTP = 25,
    IPPORT_TIMESERVER = 37,
    IPPORT_NAMESERVER = 42,
    IPPORT_WHOIS = 43,
    IPPORT_MTP = 57,

    IPPORT_TFTP = 69,
    IPPORT_RJE = 77,
    IPPORT_FINGER = 79,
    IPPORT_TTYLINK = 87,
    IPPORT_SUPDUP = 95,


    IPPORT_EXECSERVER = 512,
    IPPORT_LOGINSERVER = 513,
    IPPORT_CMDSERVER = 514,
    IPPORT_EFSSERVER = 520,


    IPPORT_BIFFUDP = 512,
    IPPORT_WHOSERVER = 513,
    IPPORT_ROUTESERVER = 520,


    IPPORT_RESERVED = 1024,


    IPPORT_USERRESERVED = 5000
  };



typedef uint32_t in_addr_t;
struct in_addr
  {
    in_addr_t s_addr;
  };
# 193 "/usr/include/netinet/in.h" 3 4
struct in6_addr
  {
    union
      {
 uint8_t u6_addr8[16];
 uint16_t u6_addr16[8];
 uint32_t u6_addr32[4];
      } in6_u;



  };

extern const struct in6_addr in6addr_any;
extern const struct in6_addr in6addr_loopback;
# 219 "/usr/include/netinet/in.h" 3 4
struct sockaddr_in
  {
    sa_family_t sin_family;
    in_port_t sin_port;
    struct in_addr sin_addr;


    unsigned char sin_zero[sizeof (struct sockaddr) -
      (sizeof (unsigned short int)) -
      sizeof (in_port_t) -
      sizeof (struct in_addr)];
  };


struct sockaddr_in6
  {
    sa_family_t sin6_family;
    in_port_t sin6_port;
    uint32_t sin6_flowinfo;
    struct in6_addr sin6_addr;
    uint32_t sin6_scope_id;
  };



struct ip_mreq
  {

    struct in_addr imr_multiaddr;


    struct in_addr imr_interface;
  };

struct ip_mreq_source
  {

    struct in_addr imr_multiaddr;


    struct in_addr imr_interface;


    struct in_addr imr_sourceaddr;
  };


struct ipv6_mreq
  {

    struct in6_addr ipv6mr_multiaddr;


    unsigned int ipv6mr_interface;
  };



struct group_req
  {

    uint32_t gr_interface;


    struct sockaddr_storage gr_group;
  };

struct group_source_req
  {

    uint32_t gsr_interface;


    struct sockaddr_storage gsr_group;


    struct sockaddr_storage gsr_source;
  };



struct ip_msfilter
  {

    struct in_addr imsf_multiaddr;


    struct in_addr imsf_interface;


    uint32_t imsf_fmode;


    uint32_t imsf_numsrc;

    struct in_addr imsf_slist[1];
  };





struct group_filter
  {

    uint32_t gf_interface;


    struct sockaddr_storage gf_group;


    uint32_t gf_fmode;


    uint32_t gf_numsrc;

    struct sockaddr_storage gf_slist[1];
};
# 345 "/usr/include/netinet/in.h" 3 4
# 1 "/usr/include/bits/in.h" 1 3 4
# 82 "/usr/include/bits/in.h" 3 4
struct ip_opts
  {
    struct in_addr ip_dst;
    char ip_opts[40];
  };


struct ip_mreqn
  {
    struct in_addr imr_multiaddr;
    struct in_addr imr_address;
    int imr_ifindex;
  };


struct in_pktinfo
  {
    int ipi_ifindex;
    struct in_addr ipi_spec_dst;
    struct in_addr ipi_addr;
  };
# 346 "/usr/include/netinet/in.h" 2 3 4
# 354 "/usr/include/netinet/in.h" 3 4
extern uint32_t ntohl (uint32_t __netlong) __attribute__ ((__nothrow__)) __attribute__ ((__const__));
extern uint16_t ntohs (uint16_t __netshort)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__));
extern uint32_t htonl (uint32_t __hostlong)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__));
extern uint16_t htons (uint16_t __hostshort)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__));




# 1 "/usr/include/bits/byteswap.h" 1 3 4
# 366 "/usr/include/netinet/in.h" 2 3 4
# 428 "/usr/include/netinet/in.h" 3 4
extern int bindresvport (int __sockfd, struct sockaddr_in *__sock_in) __attribute__ ((__nothrow__));


extern int bindresvport6 (int __sockfd, struct sockaddr_in6 *__sock_in)
     __attribute__ ((__nothrow__));
# 456 "/usr/include/netinet/in.h" 3 4
struct in6_pktinfo
  {
    struct in6_addr ipi6_addr;
    unsigned int ipi6_ifindex;
  };
# 510 "/usr/include/netinet/in.h" 3 4

# 24 "/usr/include/arpa/inet.h" 2 3 4











extern in_addr_t inet_addr (__const char *__cp) __attribute__ ((__nothrow__));


extern in_addr_t inet_lnaof (struct in_addr __in) __attribute__ ((__nothrow__));



extern struct in_addr inet_makeaddr (in_addr_t __net, in_addr_t __host)
     __attribute__ ((__nothrow__));


extern in_addr_t inet_netof (struct in_addr __in) __attribute__ ((__nothrow__));



extern in_addr_t inet_network (__const char *__cp) __attribute__ ((__nothrow__));



extern char *inet_ntoa (struct in_addr __in) __attribute__ ((__nothrow__));




extern int inet_pton (int __af, __const char *__restrict __cp,
        void *__restrict __buf) __attribute__ ((__nothrow__));




extern __const char *inet_ntop (int __af, __const void *__restrict __cp,
    char *__restrict __buf, socklen_t __len)
     __attribute__ ((__nothrow__));






extern int inet_aton (__const char *__cp, struct in_addr *__inp) __attribute__ ((__nothrow__));



extern char *inet_neta (in_addr_t __net, char *__buf, size_t __len) __attribute__ ((__nothrow__));




extern char *inet_net_ntop (int __af, __const void *__cp, int __bits,
       char *__buf, size_t __len) __attribute__ ((__nothrow__));




extern int inet_net_pton (int __af, __const char *__cp,
     void *__buf, size_t __len) __attribute__ ((__nothrow__));




extern unsigned int inet_nsap_addr (__const char *__cp,
        unsigned char *__buf, int __len) __attribute__ ((__nothrow__));



extern char *inet_nsap_ntoa (int __len, __const unsigned char *__cp,
        char *__buf) __attribute__ ((__nothrow__));



# 32 "../src/globals.h" 2
# 53 "../src/globals.h"
typedef unsigned long bool_t;




# 1 "../src/lld2d_types.h" 1
# 23 "../src/lld2d_types.h"
typedef struct {
    uint8_t a[6];
} __attribute__ ((packed)) etheraddr_t;

typedef uint32_t ipv4addr_t;

typedef struct in6_addr ipv6addr_t;


typedef uint16_t ucs2char_t;





typedef void (*event_fn_t)(void *state);


struct event_st {
    struct timeval ev_firetime;
    event_fn_t ev_function;
    void *ev_state;
    struct event_st *ev_next;
};


typedef struct event_st event_t;


typedef enum {
    smS_Nascent,
    smS_Pending,
    smS_Temporary,
    smS_Complete
} smS_state_t;


typedef struct {
    bool_t ssn_is_valid;
    smS_state_t ssn_state;
    uint ssn_count;
    uint16_t ssn_XID;
    etheraddr_t ssn_mapper_real;
    etheraddr_t ssn_mapper_current;
    bool_t ssn_use_broadcast;
    uint8_t ssn_TypeOfSvc;
    struct event_st *ssn_InactivityTimer;
} session_t;


typedef enum {
    smE_Quiescent,
    smE_Pausing,
    smE_Wait
} smE_state_t;


typedef enum {
    smT_Quiescent,
    smT_Command,
    smT_Emit
} smT_state_t;

# 1 "../src/protocol.h" 1
# 37 "../src/protocol.h"
typedef struct topo_ether_header {
    etheraddr_t eh_dst __attribute__((packed));
    etheraddr_t eh_src __attribute__((packed));
    uint16_t eh_ethertype __attribute__((packed));
} __attribute__ ((packed)) topo_ether_header_t;





typedef enum {
    ToS_TopologyDiscovery = 0x00,
    ToS_QuickDiscovery,
    ToS_QoSDiagnostics,
    ToS_MAX,
    ToS_Unknown
} lld2_tos_t;

static const char * const Lld2_tos_names[] =
{
    "Topology-Discovery",
    "Quick-Discovery",
    "QoS-Diagnostics"
};

# 1 "../src/qosprotocol.h" 1
# 24 "../src/qosprotocol.h"
typedef enum {
    Qopcode_InitializeSink = 0x00,
    Qopcode_Ready,
    Qopcode_Probe,
    Qopcode_Query,
    Qopcode_QueryResp,
    Qopcode_Reset,
    Qopcode_Error,
    Qopcode_ACK,
    Qopcode_CounterSnapshot,
    Qopcode_CounterResult,
    Qopcode_CounterLease,
    Qopcode_INVALID
} qos_opcode_t;

typedef enum {
    Qoserror_InsufficientResources = 0x00,
    Qoserror_Busy,
    Qoserror_ModerationNotAvailable,
    Qoserror_INVALID
} qos_error_t;


static const char * const Qos_errors[] =
{
    "",
    "QosInsufficientResources",
    "QosBusy",
    "QosModerationNotAvailable",
    "Invalid-Error"
};


static const char * const Qos_opcode_names[] =
{
    "QosInitializeSink",
    "QosReady",
    "QosProbe",
    "QosQuery",
    "QosQueryResp",
    "QosReset",
    "QosError",
    "QosAck",
    "QosCounterSnapshot",
    "QosCounterResult",
    "QosCounterLease",
    "Invalid-Opcode"
};


typedef struct {
    etheraddr_t qeh_dst __attribute__ ((packed));
    etheraddr_t qeh_src __attribute__ ((packed));
    uint16_t qeh_qtag __attribute__ ((packed));
    uint16_t qeh_ptag __attribute__ ((packed));
    uint16_t qeh_ethertype __attribute__ ((packed));
} __attribute__ ((packed)) qos_ether_header_t;

typedef struct {
    uint8_t qbh_version __attribute__ ((packed));
    uint8_t qbh_tos __attribute__ ((packed));
    uint8_t qbh_resrvd __attribute__ ((packed));
    uint8_t qbh_opcode __attribute__ ((packed));
    etheraddr_t qbh_realdst __attribute__ ((packed));
    etheraddr_t qbh_realsrc __attribute__ ((packed));
    uint16_t qbh_seqnum __attribute__ ((packed));
} __attribute__ ((packed)) qos_base_header_t;


typedef struct {
    uint8_t init_intmod_ctrl __attribute__ ((packed));
} __attribute__ ((packed)) qos_initsink_header_t;


typedef struct {
    uint32_t rdy_linkspeed __attribute__ ((packed));
    uint64_t rdy_tstampfreq __attribute__ ((packed));
} __attribute__ ((packed)) qos_ready_header_t;


typedef struct {
    uint64_t probe_txstamp __attribute__ ((packed));
    uint64_t probe_rxstamp __attribute__ ((packed));
    uint64_t probe_rtxstamp __attribute__ ((packed));
    uint8_t probe_testtype __attribute__ ((packed));
    uint8_t probe_pktID __attribute__ ((packed));
    uint8_t probe_pqval __attribute__ ((packed));
    uint8_t probe_payload[0] __attribute__ ((packed));
} __attribute__ ((packed)) qos_probe_header_t;



typedef struct {
    uint16_t qr_EvtCnt __attribute__ ((packed));

} __attribute__ ((packed)) qos_queryresponse_header_t;

typedef struct {
    uint64_t ctrlr_txstamp __attribute__ ((packed));
    uint64_t sink_rxstamp __attribute__ ((packed));
    uint8_t evt_pktID __attribute__ ((packed));
    uint8_t evt_reserved __attribute__ ((packed));
} __attribute__ ((packed)) qosEventDescr_t;



typedef struct {
    uint16_t qe_errcode __attribute__ ((packed));
} __attribute__ ((packed)) qos_error_header_t;

typedef struct {
    uint16_t cnt_rqstd __attribute__ ((packed));
} __attribute__ ((packed)) qos_snapshot_header_t;

typedef struct {
    uint8_t subsec_span __attribute__ ((packed));
    uint8_t byte_scale __attribute__ ((packed));
    uint8_t pkt_scale __attribute__ ((packed));
    uint8_t history_sz __attribute__ ((packed));
} __attribute__ ((packed)) qos_counter_hdr;

typedef struct {
    uint16_t bytes_rcvd __attribute__ ((packed));
    uint16_t pkts_rcvd __attribute__ ((packed));
    uint16_t bytes_sent __attribute__ ((packed));
    uint16_t pkts_sent __attribute__ ((packed));
} __attribute__ ((packed)) qos_perf_sample;
# 63 "../src/protocol.h" 2


typedef enum {
    Opcode_Discover = 0x00,
    Opcode_Hello,
    Opcode_Emit,
    Opcode_Train,
    Opcode_Probe,
    Opcode_ACK,
    Opcode_Query,
    Opcode_QueryResp,
    Opcode_Reset,
    Opcode_Charge,
    Opcode_Flat,
    Opcode_QueryLargeTlv,
    Opcode_QueryLargeTlvResp,
    Opcode_INVALID
} topo_opcode_t;

static const char * const Topo_opcode_names[] =
{
    "Discover",
    "Hello",
    "Emit",
    "Train",
    "Probe",
    "ACK",
    "Query",
    "QueryResp",
    "Reset",
    "Charge",
    "Flat",
    "QueryLargeTlv",
    "QueryLargeTlvResp",
    "Invalid-Opcode"
};
# 124 "../src/protocol.h"
typedef struct {
    uint8_t tbh_version __attribute__ ((packed));
    uint8_t tbh_tos __attribute__ ((packed));
    uint8_t tbh_resrvd __attribute__ ((packed));
    uint8_t tbh_opcode __attribute__ ((packed));
    etheraddr_t tbh_realdst __attribute__ ((packed));
    etheraddr_t tbh_realsrc __attribute__ ((packed));
    uint16_t tbh_seqnum __attribute__ ((packed));
} __attribute__ ((packed)) topo_base_header_t;

typedef struct {
    uint16_t mh_gen __attribute__ ((packed));
    uint16_t mh_numstations __attribute__ ((packed));

} __attribute__ ((packed)) topo_discover_header_t;

typedef struct {
    uint16_t hh_gen __attribute__ ((packed));
    etheraddr_t hh_curmapraddr __attribute__ ((packed));
    etheraddr_t hh_aprmapraddr __attribute__ ((packed));

} __attribute__ ((packed)) topo_hello_header_t;

typedef struct {
    uint16_t eh_numdescs __attribute__ ((packed));

} __attribute__ ((packed)) topo_emit_header_t;

typedef struct {
    uint8_t ed_type __attribute__ ((packed));
    uint8_t ed_pause __attribute__ ((packed));
    etheraddr_t ed_src __attribute__ ((packed));
    etheraddr_t ed_dst __attribute__ ((packed));
} __attribute__ ((packed)) topo_emitee_desc_t;

typedef struct {
    uint16_t qr_numdescs __attribute__ ((packed));

} __attribute__ ((packed)) topo_queryresp_header_t;

typedef struct {
    uint16_t rd_type __attribute__ ((packed));
    etheraddr_t rd_realsrc __attribute__ ((packed));
    etheraddr_t rd_src __attribute__ ((packed));
    etheraddr_t rd_dst __attribute__ ((packed));
} __attribute__ ((packed)) topo_recvee_desc_t;

typedef struct {
    uint32_t fh_ctc_bytes __attribute__ ((packed));
    uint16_t fh_ctc_packets __attribute__ ((packed));
} __attribute__ ((packed)) topo_flat_header_t;

typedef struct {
    uint8_t qh_type __attribute__ ((packed));
    uint8_t qh_rsvd1 __attribute__ ((packed));
    uint16_t qh_offset __attribute__ ((packed));
} __attribute__ ((packed)) topo_qltlv_header_t;

typedef struct {
    uint16_t qrh_length __attribute__ ((packed));

} __attribute__ ((packed)) topo_qltlvresp_header_t;
# 87 "../src/lld2d_types.h" 2


# 1 "../src/smevent.h" 1
# 25 "../src/smevent.h"
static const char * const smEvent_names[] =
{
    "PacketRcvd",
    "DiscoverRcvd",
    "EmitRcvd",
    "ResetRcvd",
    "BlockTimeout",
    "ChargeTimeout",
    "EmitTimeout",
    "HelloDelayTimeout",
    "InactivityTimeout",
    "InvalidPacket"
};

typedef enum {
    evtPacketRcvd,
    evtDiscoverRcvd,
    evtEmitRcvd,
    evtResetRcvd,
    evtBlockTimeout,
    evtChargeTimeout,
    evtEmitTimeout,
    evtHelloDelayTimeout,
    evtInactivityTimeout,
    evtInvalidPacket
} smEvent_t;

typedef struct {
    smEvent_t evtType;
    session_t *ssn;

    bool_t isNewSession;
    bool_t isAckingMe;
    bool_t isInternalEvt;
    uint numDescrs;
} protocol_event_t;
# 90 "../src/lld2d_types.h" 2


# 1 "../src/event.h" 1
# 27 "../src/event.h"
extern void event_init(void);


extern event_t *event_add(struct timeval *firetime, event_fn_t function, void *state);



extern bool_t event_cancel(event_t *event);



typedef void (*event_io_fn_t)(int fd, void *state);
extern void event_add_io(int fd, event_io_fn_t function, void *state);
extern void event_remove_io(int fd);



extern void event_mainloop(void);
# 93 "../src/lld2d_types.h" 2

# 1 "../src/util.h" 1
# 50 "../src/util.h"
static const etheraddr_t Etheraddr_broadcast =
(etheraddr_t){{0xff, 0xff, 0xff, 0xff, 0xff, 0xff}};

static const etheraddr_t Etheraddr_null =
(etheraddr_t){{0x00, 0x00, 0x00, 0x00, 0x00, 0x00}};
# 68 "../src/util.h"
extern void cpy_hton64(void* destination, void* source);

extern void die(const char *msg, ...) __attribute__ ((format (printf, 1, 2))) __attribute__ ((noreturn));

extern void warn(const char *msg, ...) __attribute__ ((format (printf, 1, 2)));

extern void dbgprintf(const char *msg, ...) __attribute__ ((format (printf, 1, 2)));


extern uint32_t random_uniform(uint32_t upperlimit);


extern void *xmalloc(size_t nbytes);
extern void xfree(void *p);




extern void util_copy_ascii_to_ucs2(ucs2char_t *dst, size_t dst_bytes, const char *src);


extern void util_use_syslog(void);
# 95 "../src/lld2d_types.h" 2
# 59 "../src/globals.h" 2
# 1 "../src/osl.h" 1
# 29 "../src/osl.h"
struct osl_st
{
    char * responder_if;
    char * wireless_if;
    int sock;
};


typedef struct osl_st osl_t;

# 1 "../src/tlv.h" 1
# 23 "../src/tlv.h"
typedef struct {
    etheraddr_t MACaddr;
    uint16_t MOR;
    uint8_t PHYtype;
} assn_table_entry_t;



typedef struct {
    assn_table_entry_t *table;
    uint assn_cnt;
    struct timeval collection_time;
} assns_t;

typedef struct {
    size_t sz_iconfile;
    int fd_icon;
} icon_file_t;

typedef struct {
    size_t sz_iconfile;
    int fd_icon;
} lg_icon_t;

typedef enum {
    Bridge_Component = 0,
    RadioBand_Component,
    Switch_Component
} component_t;

typedef struct {
    uint16_t MOR;
    uint8_t PHYtype;
    uint8_t mode;
    etheraddr_t BSSID;
} radio_t;

typedef struct {
    uint8_t version;
    uint8_t bridge_behavior;
    uint32_t link_speed;
    int radio_cnt;
    radio_t *radios;
} comptbl_t;


typedef enum {
    Access_invalid,
    Access_unset,
    Access_static,
    Access_dynamic
} tlv_access_t;





typedef struct _tlv_info {


# 1 "../src/tlvdef.h" 1
# 26 "../src/tlvdef.h"
    etheraddr_t hostid ;
    uint32_t net_flags ;
    uint32_t physical_medium ;
    uint8_t wireless_mode ;
    etheraddr_t bssid ;

    ipv4addr_t ipv4addr ;
    ipv6addr_t ipv6addr ;
    uint16_t max_op_rate ;
    uint32_t link_speed ;
    uint64_t tsc_ticks_per_sec ;

    icon_file_t icon_image ;
    ucs2char_t machine_name [16];
    ucs2char_t support_info [32];
    ucs2char_t friendly_name [32];

    ucs2char_t hw_id [200];
    uint32_t qos_flags ;
    uint8_t wl_physical_medium ;
    assns_t accesspt_assns ;
    lg_icon_t jumbo_icon ;
    uint16_t sees_max ;
    comptbl_t component_tbl ;
# 84 "../src/tlv.h" 2

} tlv_info_t;
# 106 "../src/tlv.h"
typedef int (*tlv_get_fn)(void *data);
# 124 "../src/tlv.h"
typedef int (*tlv_write_fn)(int number, void *data, uint8_t *buf, int bytes_free, bool_t isHello, bool_t isLarge, size_t offset);




typedef struct {
    int number;
    int offset;
    tlv_access_t access;
    bool_t inHello;
    tlv_get_fn get;
    tlv_write_fn write;
} tlv_desc_t;

extern tlv_desc_t Tlvs[];



extern int tlv_write_info(uint8_t *buf, int bytes_free);



extern int tlv_write_tlv(tlv_desc_t *tlv, uint8_t *buf, int bytes_free, bool_t isHello, size_t LtlvOffset);
# 40 "../src/osl.h" 2


extern osl_t *osl_init(void);


extern void osl_become_daemon(osl_t *osl);







extern void osl_interface_open(osl_t *osl, char *interface, void *state);






extern void osl_write_pidfile(osl_t *osl);



extern void osl_drop_privs(osl_t *osl);


extern void osl_set_promisc(osl_t *osl, bool_t promisc);


extern void osl_get_hwaddr(osl_t *osl, etheraddr_t *addr);





extern ssize_t osl_read(int fd, void *buf, size_t count);


extern ssize_t osl_write(osl_t *osl, const void *buf, size_t count);
# 60 "../src/globals.h" 2

# 1 "../src/band.h" 1
# 37 "../src/band.h"
typedef struct {
    uint32_t Ni;
    uint32_t r;
    bool_t begun;
} band_t;
# 62 "../src/globals.h" 2
# 1 "../src/seeslist.h" 1
# 25 "../src/seeslist.h"
typedef struct topo_seeslist_st topo_seeslist_t;

extern topo_seeslist_t *seeslist_new(int count);

extern bool_t seeslist_enqueue(bool_t isARP, etheraddr_t *realsrc);

extern bool_t seeslist_dequeue( topo_recvee_desc_t *dest);

extern void seeslist_clear(void);

extern bool_t seeslist_is_empty(void);

extern void seeslist_free(void);
# 63 "../src/globals.h" 2
# 74 "../src/globals.h"
extern char *g_Progname;
extern char *g_interface;
extern char *g_wl_interface;
extern char g_buf[160];
extern etheraddr_t g_hwaddr;

extern uint g_trace_flags;

extern smE_state_t g_smE_state;
extern smT_state_t g_smT_state;

extern protocol_event_t g_this_event;


extern session_t g_sessions[11];
extern session_t *g_topo_session;
extern tlv_info_t g_info;
extern char *g_icon_path;
extern char *g_jumbo_icon_path;
extern band_t g_band;

extern osl_t *g_osl;





extern uint8_t g_rxbuf[2048];
extern uint8_t g_txbuf[2048];
extern uint8_t g_re_txbuf[2048];
extern size_t g_rcvd_pkt_len;
extern uint16_t g_rtxseqnum;
extern size_t g_tx_len;
extern size_t g_re_tx_len;
extern uint8_t g_re_tx_opcode;


extern topo_ether_header_t *g_ethernet_hdr;
extern topo_base_header_t *g_base_hdr;
extern topo_discover_header_t *g_discover_hdr;
extern topo_hello_header_t *g_hello_hdr;
extern topo_qltlv_header_t *g_qltlv_hdr;

extern uint16_t g_generation;
extern uint16_t g_sequencenum;
extern uint g_opcode;
# 133 "../src/globals.h"
extern uint32_t g_ctc_packets;
extern uint32_t g_ctc_bytes;
extern uint32_t g_totalPause;
extern uint32_t g_neededPackets;
extern uint32_t g_neededBytes;



extern uint8_t g_emitbuf[2048];
extern uint16_t g_emit_remaining;
extern uint16_t g_emit_seqnum;
extern topo_emitee_desc_t *g_emitdesc;


extern topo_seeslist_t *g_sees;


extern event_t *g_block_timer;
extern event_t *g_charge_timer;
extern event_t *g_emit_timer;
extern event_t *g_hello_timer;
# 183 "../src/globals.h"
# 1 "../src/qosglobals.h" 1
# 26 "../src/qosglobals.h"
typedef struct {
    uint16_t evt_seqNum;
    uint16_t evt_numEvts;
    qosEventDescr_t evt_descs[32];
} qosEventBucket_t;


typedef struct {
    uint32_t qssn_ticks_til_discard;
    uint8_t qssn_first_bucket;
    uint8_t qssn_num_active_buckets;
    qosEventBucket_t qssn_evt_buckets[8];
    etheraddr_t qssn_ctrlr_real;
    bool_t qssn_is_valid;
} qos_session_t;




extern qos_session_t g_QosSessions[10];

extern qos_probe_header_t *g_qprb_hdr;
extern qos_initsink_header_t *g_qinit_hdr;
extern qos_snapshot_header_t *g_snap_hdr;

extern uint32_t g_LinkSpeed;
extern uint64_t g_TimeStampFreq;
extern uint64_t g_pktio_timestamp;
extern uint16_t g_short_reorder_buffer;
extern uint32_t g_reorder_buffer;
extern uint64_t g_long_reorder_buffer;
extern uint64_t g_perf_timestamp;
extern qos_perf_sample g_perf_samples[60];
extern uint32_t g_next_sample;
extern uint32_t g_sample_count;
extern uint32_t g_samples_remaining;
extern uint32_t g_rbytes;
extern uint32_t g_rpkts;
extern uint32_t g_tbytes;
extern uint32_t g_tpkts;

extern event_t *g_qos_inactivity_timer;

extern event_t *g_qos_CTA_timer;
# 184 "../src/globals.h" 2
# 24 "../src/band.c" 2

# 1 "../src/statemachines.h" 1
# 30 "../src/statemachines.h"
extern uint state_process_packet(void);
extern uint state_process_timeout(void);






enum sm_Status {
    PROCESSING_COMPLETED,
    KEEP_GOING,
    PROCESSING_ABORTED
};



extern enum sm_Status smS_process_event( protocol_event_t *evt );
extern enum sm_Status smE_process_event( protocol_event_t *evt );
extern enum sm_Status smT_process_event( protocol_event_t *evt );


extern void restart_inactivity_timer(uint32_t timeout);
extern bool_t set_emit_timer(void);

extern void state_block_timeout(void *cookie);
extern void state_charge_timeout(void *cookie);
extern void state_emit_timeout(void *cookie);
extern void state_hello_delay_timeout(void *cookie);
extern void state_inactivity_timeout(void *cookie);





extern bool_t OnlyCompleteSessions(void);
extern bool_t SessionTableIsEmpty(void);
# 26 "../src/band.c" 2

# 1 "../src/bandfuncs.h" 1
# 23 "../src/bandfuncs.h"
extern void band_InitStats(void);

extern void band_UpdateStats(void);

extern void band_ChooseHelloTime(void);

extern void band_IncreaseLoad(bool_t mapbegin);

extern void band_ResetNi(void);
# 28 "../src/band.c" 2

void
band_ResetNi(void)
{
    g_band.Ni = 10000;
}


void
band_InitStats(void)
{
    band_t *b = &g_band;
    struct timeval now;

    b->Ni = 10000;
    b->r = 300;
    b->begun = 0;

    if ((g_trace_flags & 0x01))
 dbgprintf("InitStats: Ni=%u r=%u\n",
  b->Ni, b->r);

    gettimeofday(&now, ((void *)0));
    do { (&now)->tv_usec += (300) * 1000; while ((&now)->tv_usec > 1000000) { (&now)->tv_sec++; (&now)->tv_usec -= 1000000; } } while(0);

    ((void) ((g_block_timer == ((void *)0)) ? 0 : (__assert_fail ("g_block_timer == ((void *)0)", "../src/band.c", 53, __PRETTY_FUNCTION__), 0)));
    g_block_timer = event_add(&now, state_block_timeout, ((void *)0));
}


void
band_UpdateStats(void)
{
    band_t *b = &g_band;
    struct timeval now;



    uint32_t Ta = 300;

    uint32_t value = (((b->r * b->Ni) * 20 +2) / 3) / (Ta * 1000);
    uint32_t bound = ((b->Ni * 10) + (45 * 2 -1))
      / (45 * 2);
    b->Ni = (((100*10000)<((((bound)>(value))? (bound) : (value))))? (100*10000) : ((((bound)>(value))? (bound) : (value))));

    if (b->begun) {
 if (b->Ni < 10000/2) {
     b->Ni *= 2;
        } else if (b->Ni < 10000) {
     b->Ni = 10000;
 }
    }
    b->begun = 0;

    if ((g_trace_flags & 0x01))
 dbgprintf("UpdateStats: Ni=%u r=%u\n",
  b->Ni, b->r);

    if (!g_block_timer)
    {
 gettimeofday(&now, ((void *)0));
 do { (&now)->tv_usec += (300) * 1000; while ((&now)->tv_usec > 1000000) { (&now)->tv_sec++; (&now)->tv_usec -= 1000000; } } while(0);
 g_block_timer = event_add(&now, state_block_timeout, ((void *)0));
    }
    else
    {
 warn("UpdateStats: block timer still running?!?\n");
    }
}

void
band_ChooseHelloTime(void)
{
    band_t *b = &g_band;

    uint32_t delay = random_uniform(b->Ni);

    if ((g_trace_flags & 0x01))
 dbgprintf("ChooseHelloTime: delay=%u; ", delay);


    if (delay < 45 && !g_hello_timer)
    {
 struct timeval now;
 gettimeofday(&now, ((void *)0));
 do { (&now)->tv_usec += ((((delay) * 20 +2) / 3)) * 1000; while ((&now)->tv_usec > 1000000) { (&now)->tv_sec++; (&now)->tv_usec -= 1000000; } } while(0);
 g_hello_timer = event_add(&now, state_hello_delay_timeout, ((void *)0));
 if ((g_trace_flags & 0x01))
     dbgprintf("will hello at %ld.%06ld\n", now.tv_sec, now.tv_usec);
    }
    else
    {
 if ((g_trace_flags & 0x01))
     dbgprintf("idle this block, so no Hello\n");
    }
}


void
band_IncreaseLoad(bool_t mapbegin)
{
    band_t *b = &g_band;

    b->r++;
    if (mapbegin)
 b->begun = 1;

    if ((g_trace_flags & 0x01))
 dbgprintf("IncreaseLoad: Ni=%u r=%u\n",
  b->Ni, b->r);
}
